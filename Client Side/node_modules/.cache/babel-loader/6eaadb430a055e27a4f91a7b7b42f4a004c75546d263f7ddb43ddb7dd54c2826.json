{"ast":null,"code":"var _jsxFileName = \"F:\\\\Open Project'25\\\\MARS Open Project\\\\Harsh\\\\Client Side\\\\src\\\\components\\\\Canvas.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useImperativeHandle, forwardRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CANVAS_WIDTH = 1200;\nconst CANVAS_HEIGHT = 700;\nconst Canvas = /*#__PURE__*/_s(/*#__PURE__*/forwardRef(_c = _s(({\n  tool = 'pen',\n  color = '#000000',\n  brushSize = 2,\n  opacity = 1,\n  onDrawEvent,\n  onDrawStart,\n  onDrawEnd,\n  remoteDrawEvent,\n  undoStack,\n  redoStack\n}, ref) => {\n  _s();\n  const canvasRef = useRef(null);\n  const ctxRef = useRef(null);\n  const drawing = useRef(false);\n  const startPoint = useRef(null);\n  const snapshot = useRef(null);\n  const localUndoStack = useRef([]);\n  const localRedoStack = useRef([]);\n  const currentStroke = useRef([]);\n\n  // For smoother drawing, use requestAnimationFrame\n  const lastDraw = useRef(null);\n  const pendingDraw = useRef(null);\n\n  // Expose imperative methods\n\n  useImperativeHandle(ref, () => ({\n    exportImage: () => {\n      return canvasRef.current.toDataURL('image/png');\n    },\n    exportPDF: async () => {\n      const jsPDF = (await import('jspdf')).jsPDF;\n      const canvas = canvasRef.current;\n      const dataUrl = canvas.toDataURL('image/png');\n      const pdf = new jsPDF({\n        orientation: 'landscape'\n      });\n      pdf.addImage(dataUrl, 'PNG', 10, 10, 280, 160);\n      return pdf;\n    },\n    clear: () => {\n      clearCanvas();\n    },\n    undo: () => {\n      handleUndo();\n    },\n    redo: () => {\n      handleRedo();\n    },\n    loadImageFromDataUrl: dataUrl => {\n      const img = new window.Image();\n      img.onload = () => {\n        ctxRef.current.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n        ctxRef.current.drawImage(img, 0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n        localUndoStack.current = [ctxRef.current.getImageData(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT)];\n        localRedoStack.current = [];\n      };\n      img.src = dataUrl;\n    }\n  }));\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas.width = CANVAS_WIDTH;\n    canvas.height = CANVAS_HEIGHT;\n    ctxRef.current = canvas.getContext('2d');\n    ctxRef.current.lineCap = 'round';\n    ctxRef.current.lineJoin = 'round';\n    ctxRef.current.globalAlpha = opacity;\n  }, [opacity]);\n\n  // Handle remote draw events\n  useEffect(() => {\n    if (!remoteDrawEvent) return;\n    if (remoteDrawEvent.type === 'stroke' && remoteDrawEvent.points) {\n      drawStroke(remoteDrawEvent.points, remoteDrawEvent);\n    } else if (remoteDrawEvent.type === 'draw') {\n      drawLine(remoteDrawEvent.prev, remoteDrawEvent.current, remoteDrawEvent);\n    } else if (remoteDrawEvent.type === 'shape') {\n      drawShape(remoteDrawEvent);\n    } else if (remoteDrawEvent.type === 'text') {\n      drawText(remoteDrawEvent);\n    } else if (remoteDrawEvent.type === 'clear') {\n      clearCanvas();\n    }\n  }, [remoteDrawEvent]);\n  const getPointer = e => {\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    const scaleX = canvas.width / rect.width;\n    const scaleY = canvas.height / rect.height;\n\n    // Pointer events have a consistent API for coordinates\n    return {\n      x: (e.clientX - rect.left) * scaleX,\n      y: (e.clientY - rect.top) * scaleY\n    };\n  };\n  const handlePointerDown = e => {\n    drawing.current = true;\n    const point = getPointer(e);\n    startPoint.current = point;\n    snapshot.current = ctxRef.current.getImageData(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n    currentStroke.current = [point];\n    if (tool === 'pen' || tool === 'eraser') {\n      ctxRef.current.beginPath();\n      ctxRef.current.moveTo(point.x, point.y);\n      ctxRef.current.strokeStyle = tool === 'eraser' ? '#fff' : color;\n      ctxRef.current.lineWidth = brushSize;\n      ctxRef.current.globalAlpha = opacity;\n      if (onDrawStart) onDrawStart(point);\n    }\n  };\n  const smoothDrawLine = (from, to, settings) => {\n    if (lastDraw.current) cancelAnimationFrame(lastDraw.current);\n    pendingDraw.current = {\n      from,\n      to,\n      settings\n    };\n    lastDraw.current = requestAnimationFrame(() => {\n      drawLine(from, to, settings);\n      pendingDraw.current = null;\n    });\n  };\n  const emitDrawEvent = drawData => {\n    if (onDrawEvent) onDrawEvent(drawData);\n  };\n  const handlePointerMove = e => {\n    if (!drawing.current) return;\n    const point = getPointer(e);\n    if (tool === 'pen' || tool === 'eraser') {\n      ctxRef.current.lineTo(point.x, point.y);\n      ctxRef.current.strokeStyle = tool === 'eraser' ? '#fff' : color;\n      ctxRef.current.lineWidth = brushSize;\n      ctxRef.current.globalAlpha = opacity;\n      ctxRef.current.stroke();\n      currentStroke.current.push(point);\n      startPoint.current = point;\n    } else if (tool === 'rectangle' || tool === 'circle') {\n      ctxRef.current.putImageData(snapshot.current, 0, 0);\n      ctxRef.current.strokeStyle = color;\n      ctxRef.current.lineWidth = brushSize;\n      ctxRef.current.globalAlpha = opacity;\n      if (tool === 'rectangle') {\n        const width = point.x - startPoint.current.x;\n        const height = point.y - startPoint.current.y;\n        ctxRef.current.strokeRect(startPoint.current.x, startPoint.current.y, width, height);\n      } else if (tool === 'circle') {\n        const radius = Math.sqrt(Math.pow(point.x - startPoint.current.x, 2) + Math.pow(point.y - startPoint.current.y, 2));\n        ctxRef.current.beginPath();\n        ctxRef.current.arc(startPoint.current.x, startPoint.current.y, radius, 0, 2 * Math.PI);\n        ctxRef.current.stroke();\n      }\n    }\n  };\n  const handlePointerUp = e => {\n    if (!drawing.current) return;\n    drawing.current = false;\n    const point = getPointer(e);\n    if (tool === 'rectangle' || tool === 'circle') {\n      handlePointerMove(e);\n      if (onDrawEvent) {\n        onDrawEvent({\n          type: 'shape',\n          shape: tool,\n          start: startPoint.current,\n          end: point,\n          color,\n          brushSize,\n          opacity,\n          canvasData: canvasRef.current.toDataURL('image/png')\n        });\n      }\n    }\n    localUndoStack.current.push(ctxRef.current.getImageData(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT));\n    localRedoStack.current = [];\n    if (onDrawEnd) onDrawEnd(point);\n    if ((tool === 'pen' || tool === 'eraser') && currentStroke.current.length > 1) {\n      if (onDrawEvent) {\n        onDrawEvent({\n          type: 'stroke',\n          points: currentStroke.current,\n          tool,\n          color,\n          brushSize,\n          opacity,\n          canvasData: canvasRef.current.toDataURL('image/png')\n        });\n      }\n    } else if (tool !== 'rectangle' && tool !== 'circle' && onDrawEvent) {\n      onDrawEvent({\n        type: 'end',\n        canvasData: canvasRef.current.toDataURL('image/png'),\n        tool,\n        color,\n        brushSize,\n        opacity\n      });\n    }\n    currentStroke.current = [];\n  };\n  const handleDoubleClick = e => {\n    if (tool === 'text') {\n      const point = getPointer(e);\n      const text = prompt('Enter text:');\n      if (text) {\n        ctxRef.current.font = `${brushSize * 6}px Arial`;\n        ctxRef.current.fillStyle = color;\n        ctxRef.current.globalAlpha = opacity;\n        ctxRef.current.fillText(text, point.x, point.y);\n        localUndoStack.current.push(ctxRef.current.getImageData(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT));\n        localRedoStack.current = [];\n        if (onDrawEvent) {\n          onDrawEvent({\n            type: 'text',\n            text,\n            point,\n            color,\n            brushSize,\n            opacity,\n            canvasData: canvasRef.current.toDataURL('image/png')\n          });\n        }\n      }\n    }\n  };\n  const drawLine = (from, to, settings) => {\n    ctxRef.current.save();\n    ctxRef.current.beginPath();\n    ctxRef.current.moveTo(from.x, from.y);\n    ctxRef.current.lineTo(to.x, to.y);\n    ctxRef.current.strokeStyle = settings.tool === 'eraser' ? '#fff' : settings.color;\n    ctxRef.current.lineWidth = settings.brushSize;\n    ctxRef.current.globalAlpha = settings.opacity;\n    ctxRef.current.stroke();\n    ctxRef.current.restore();\n  };\n  const clearCanvas = () => {\n    ctxRef.current.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n    localUndoStack.current.push(ctxRef.current.getImageData(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT));\n    localRedoStack.current = [];\n  };\n  const handleUndo = () => {\n    if (localUndoStack.current.length > 1) {\n      localRedoStack.current.push(localUndoStack.current.pop());\n      const prev = localUndoStack.current[localUndoStack.current.length - 1];\n      ctxRef.current.putImageData(prev, 0, 0);\n    }\n  };\n  const handleRedo = () => {\n    if (localRedoStack.current.length > 0) {\n      const redoImg = localRedoStack.current.pop();\n      ctxRef.current.putImageData(redoImg, 0, 0);\n      localUndoStack.current.push(redoImg);\n    }\n  };\n\n  // Initialize undo stack on mount\n  useEffect(() => {\n    localUndoStack.current = [ctxRef.current.getImageData(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT)];\n    localRedoStack.current = [];\n  }, []);\n\n  // Draw a full stroke from array of points\n  const drawStroke = (points, settings) => {\n    if (!points || points.length < 2) return;\n    ctxRef.current.save();\n    ctxRef.current.beginPath();\n    ctxRef.current.moveTo(points[0].x, points[0].y);\n    for (let i = 1; i < points.length; i++) {\n      ctxRef.current.lineTo(points[i].x, points[i].y);\n    }\n    ctxRef.current.strokeStyle = settings.tool === 'eraser' ? '#fff' : settings.color;\n    ctxRef.current.lineWidth = settings.brushSize;\n    ctxRef.current.globalAlpha = settings.opacity;\n    ctxRef.current.stroke();\n    ctxRef.current.restore();\n  };\n\n  // Draw a shape (rectangle or circle) from event data\n  const drawShape = event => {\n    const {\n      shape,\n      start,\n      end,\n      color,\n      brushSize,\n      opacity\n    } = event;\n    ctxRef.current.save();\n    ctxRef.current.strokeStyle = color;\n    ctxRef.current.lineWidth = brushSize;\n    ctxRef.current.globalAlpha = opacity;\n    if (shape === 'rectangle') {\n      const width = end.x - start.x;\n      const height = end.y - start.y;\n      ctxRef.current.strokeRect(start.x, start.y, width, height);\n    } else if (shape === 'circle') {\n      const radius = Math.sqrt(Math.pow(end.x - start.x, 2) + Math.pow(end.y - start.y, 2));\n      ctxRef.current.beginPath();\n      ctxRef.current.arc(start.x, start.y, radius, 0, 2 * Math.PI);\n      ctxRef.current.stroke();\n    }\n    ctxRef.current.restore();\n  };\n\n  // Draw text from event data\n  const drawText = event => {\n    const {\n      text,\n      point,\n      color,\n      brushSize,\n      opacity\n    } = event;\n    ctxRef.current.save();\n    ctxRef.current.font = `${brushSize * 6}px Arial`;\n    ctxRef.current.fillStyle = color;\n    ctxRef.current.globalAlpha = opacity;\n    ctxRef.current.fillText(text, point.x, point.y);\n    ctxRef.current.restore();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative',\n      display: 'inline-block'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: CANVAS_WIDTH,\n      height: CANVAS_HEIGHT,\n      style: {\n        background: '#fff',\n        borderRadius: 16,\n        boxShadow: '0 4px 16px rgba(0,0,0,0.07)',\n        margin: 24,\n        cursor: tool === 'text' ? 'text' : tool === 'eraser' ? 'cell' : 'crosshair',\n        touchAction: 'none',\n        userSelect: 'none',\n        WebkitUserSelect: 'none',\n        MozUserSelect: 'none',\n        msUserSelect: 'none',\n        display: 'block',\n        width: '100%',\n        height: 'auto',\n        maxWidth: '100%',\n        maxHeight: '80vh',\n        objectFit: 'contain'\n      },\n      onPointerDown: handlePointerDown,\n      onPointerMove: handlePointerMove,\n      onPointerUp: handlePointerUp,\n      onDoubleClick: handleDoubleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 328,\n    columnNumber: 5\n  }, this);\n}, \"qzugRneiJB5dg5DvD+EyKX7i+xU=\")), \"qzugRneiJB5dg5DvD+EyKX7i+xU=\");\n_c2 = Canvas;\nexport default Canvas;\nvar _c, _c2;\n$RefreshReg$(_c, \"Canvas$forwardRef\");\n$RefreshReg$(_c2, \"Canvas\");","map":{"version":3,"names":["React","useRef","useEffect","useImperativeHandle","forwardRef","jsxDEV","_jsxDEV","CANVAS_WIDTH","CANVAS_HEIGHT","Canvas","_s","_c","tool","color","brushSize","opacity","onDrawEvent","onDrawStart","onDrawEnd","remoteDrawEvent","undoStack","redoStack","ref","canvasRef","ctxRef","drawing","startPoint","snapshot","localUndoStack","localRedoStack","currentStroke","lastDraw","pendingDraw","exportImage","current","toDataURL","exportPDF","jsPDF","canvas","dataUrl","pdf","orientation","addImage","clear","clearCanvas","undo","handleUndo","redo","handleRedo","loadImageFromDataUrl","img","window","Image","onload","clearRect","drawImage","getImageData","src","width","height","getContext","lineCap","lineJoin","globalAlpha","type","points","drawStroke","drawLine","prev","drawShape","drawText","getPointer","e","rect","getBoundingClientRect","scaleX","scaleY","x","clientX","left","y","clientY","top","handlePointerDown","point","beginPath","moveTo","strokeStyle","lineWidth","smoothDrawLine","from","to","settings","cancelAnimationFrame","requestAnimationFrame","emitDrawEvent","drawData","handlePointerMove","lineTo","stroke","push","putImageData","strokeRect","radius","Math","sqrt","pow","arc","PI","handlePointerUp","shape","start","end","canvasData","length","handleDoubleClick","text","prompt","font","fillStyle","fillText","save","restore","pop","redoImg","i","event","style","position","display","children","background","borderRadius","boxShadow","margin","cursor","touchAction","userSelect","WebkitUserSelect","MozUserSelect","msUserSelect","maxWidth","maxHeight","objectFit","onPointerDown","onPointerMove","onPointerUp","onDoubleClick","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["F:/Open Project'25/MARS Open Project/Harsh/Client Side/src/components/Canvas.js"],"sourcesContent":["import React, { useRef, useEffect, useImperativeHandle, forwardRef } from 'react';\r\n\r\nconst CANVAS_WIDTH = 1200;\r\nconst CANVAS_HEIGHT = 700;\r\n\r\nconst Canvas = forwardRef(({ \r\n  tool = 'pen', \r\n  color = '#000000', \r\n  brushSize = 2, \r\n  opacity = 1,\r\n  onDrawEvent,\r\n  onDrawStart,\r\n  onDrawEnd,\r\n  remoteDrawEvent,\r\n  undoStack,\r\n  redoStack\r\n}, ref) => {\r\n  const canvasRef = useRef(null);\r\n  const ctxRef = useRef(null);\r\n  const drawing = useRef(false);\r\n  const startPoint = useRef(null);\r\n  const snapshot = useRef(null);\r\n  const localUndoStack = useRef([]);\r\n  const localRedoStack = useRef([]);\r\n  const currentStroke = useRef([]); \r\n\r\n  // For smoother drawing, use requestAnimationFrame\r\n  const lastDraw = useRef(null);\r\n  const pendingDraw = useRef(null);\r\n\r\n  // Expose imperative methods\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    exportImage: () => {\r\n      return canvasRef.current.toDataURL('image/png');\r\n    },\r\n    exportPDF: async () => {\r\n      const jsPDF = (await import('jspdf')).jsPDF;\r\n      const canvas = canvasRef.current;\r\n      const dataUrl = canvas.toDataURL('image/png');\r\n      const pdf = new jsPDF({ orientation: 'landscape' });\r\n      pdf.addImage(dataUrl, 'PNG', 10, 10, 280, 160);\r\n      return pdf;\r\n    },\r\n    clear: () => {\r\n      clearCanvas();\r\n    },\r\n    undo: () => {\r\n      handleUndo();\r\n    },\r\n    redo: () => {\r\n      handleRedo();\r\n    },\r\n    loadImageFromDataUrl: (dataUrl) => {\r\n      const img = new window.Image();\r\n      img.onload = () => {\r\n        ctxRef.current.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\r\n        ctxRef.current.drawImage(img, 0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\r\n        localUndoStack.current = [ctxRef.current.getImageData(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT)];\r\n        localRedoStack.current = [];\r\n      };\r\n      img.src = dataUrl;\r\n    }\r\n  }));\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    canvas.width = CANVAS_WIDTH;\r\n    canvas.height = CANVAS_HEIGHT;\r\n    ctxRef.current = canvas.getContext('2d');\r\n    ctxRef.current.lineCap = 'round';\r\n    ctxRef.current.lineJoin = 'round';\r\n    ctxRef.current.globalAlpha = opacity;\r\n  }, [opacity]);\r\n\r\n  // Handle remote draw events\r\n  useEffect(() => {\r\n    if (!remoteDrawEvent) return;\r\n    if (remoteDrawEvent.type === 'stroke' && remoteDrawEvent.points) {\r\n      drawStroke(remoteDrawEvent.points, remoteDrawEvent);\r\n    } else if (remoteDrawEvent.type === 'draw') {\r\n      drawLine(remoteDrawEvent.prev, remoteDrawEvent.current, remoteDrawEvent);\r\n    } else if (remoteDrawEvent.type === 'shape') {\r\n      drawShape(remoteDrawEvent);\r\n    } else if (remoteDrawEvent.type === 'text') {\r\n      drawText(remoteDrawEvent);\r\n    } else if (remoteDrawEvent.type === 'clear') {\r\n      clearCanvas();\r\n    }\r\n  }, [remoteDrawEvent]);\r\n\r\n  const getPointer = (e) => {\r\n    const canvas = canvasRef.current;\r\n    const rect = canvas.getBoundingClientRect();\r\n    const scaleX = canvas.width / rect.width;\r\n    const scaleY = canvas.height / rect.height;\r\n    \r\n    // Pointer events have a consistent API for coordinates\r\n    return {\r\n      x: (e.clientX - rect.left) * scaleX,\r\n      y: (e.clientY - rect.top) * scaleY\r\n    };\r\n  };\r\n\r\n  const handlePointerDown = (e) => {\r\n    drawing.current = true;\r\n    const point = getPointer(e);\r\n    startPoint.current = point;\r\n    snapshot.current = ctxRef.current.getImageData(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\r\n    currentStroke.current = [point]; \r\n    if (tool === 'pen' || tool === 'eraser') {\r\n      ctxRef.current.beginPath();\r\n      ctxRef.current.moveTo(point.x, point.y);\r\n      ctxRef.current.strokeStyle = tool === 'eraser' ? '#fff' : color;\r\n      ctxRef.current.lineWidth = brushSize;\r\n      ctxRef.current.globalAlpha = opacity;\r\n      if (onDrawStart) onDrawStart(point);\r\n    }\r\n  };\r\n\r\n  const smoothDrawLine = (from, to, settings) => {\r\n    if (lastDraw.current) cancelAnimationFrame(lastDraw.current);\r\n    pendingDraw.current = { from, to, settings };\r\n    lastDraw.current = requestAnimationFrame(() => {\r\n      drawLine(from, to, settings);\r\n      pendingDraw.current = null;\r\n    });\r\n  };\r\n\r\n  const emitDrawEvent = (drawData) => {\r\n    if (onDrawEvent) onDrawEvent(drawData);\r\n  };\r\n\r\n  const handlePointerMove = (e) => {\r\n    if (!drawing.current) return;\r\n    const point = getPointer(e);\r\n    if (tool === 'pen' || tool === 'eraser') {\r\n      ctxRef.current.lineTo(point.x, point.y);\r\n      ctxRef.current.strokeStyle = tool === 'eraser' ? '#fff' : color;\r\n      ctxRef.current.lineWidth = brushSize;\r\n      ctxRef.current.globalAlpha = opacity;\r\n      ctxRef.current.stroke();\r\n      currentStroke.current.push(point); \r\n      startPoint.current = point;\r\n    } else if (tool === 'rectangle' || tool === 'circle') {\r\n      ctxRef.current.putImageData(snapshot.current, 0, 0);\r\n      ctxRef.current.strokeStyle = color;\r\n      ctxRef.current.lineWidth = brushSize;\r\n      ctxRef.current.globalAlpha = opacity;\r\n      if (tool === 'rectangle') {\r\n        const width = point.x - startPoint.current.x;\r\n        const height = point.y - startPoint.current.y;\r\n        ctxRef.current.strokeRect(startPoint.current.x, startPoint.current.y, width, height);\r\n      } else if (tool === 'circle') {\r\n        const radius = Math.sqrt(Math.pow(point.x - startPoint.current.x, 2) + Math.pow(point.y - startPoint.current.y, 2));\r\n        ctxRef.current.beginPath();\r\n        ctxRef.current.arc(startPoint.current.x, startPoint.current.y, radius, 0, 2 * Math.PI);\r\n        ctxRef.current.stroke();\r\n      }\r\n    }\r\n  };\r\n\r\n  const handlePointerUp = (e) => {\r\n    if (!drawing.current) return;\r\n    drawing.current = false;\r\n    const point = getPointer(e);\r\n    if (tool === 'rectangle' || tool === 'circle') {\r\n      handlePointerMove(e);\r\n    \r\n      if (onDrawEvent) {\r\n        onDrawEvent({\r\n          type: 'shape',\r\n          shape: tool,\r\n          start: startPoint.current,\r\n          end: point,\r\n          color,\r\n          brushSize,\r\n          opacity,\r\n          canvasData: canvasRef.current.toDataURL('image/png')\r\n        });\r\n      }\r\n    }\r\n    localUndoStack.current.push(ctxRef.current.getImageData(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT));\r\n    localRedoStack.current = [];\r\n    if (onDrawEnd) onDrawEnd(point);\r\n   \r\n    if ((tool === 'pen' || tool === 'eraser') && currentStroke.current.length > 1) {\r\n      if (onDrawEvent) {\r\n        onDrawEvent({\r\n          type: 'stroke',\r\n          points: currentStroke.current,\r\n          tool,\r\n          color,\r\n          brushSize,\r\n          opacity,\r\n          canvasData: canvasRef.current.toDataURL('image/png')\r\n        });\r\n      }\r\n    } else if (tool !== 'rectangle' && tool !== 'circle' && onDrawEvent) {\r\n    \r\n      onDrawEvent({\r\n        type: 'end',\r\n        canvasData: canvasRef.current.toDataURL('image/png'),\r\n        tool,\r\n        color,\r\n        brushSize,\r\n        opacity\r\n      });\r\n    }\r\n    currentStroke.current = [];\r\n  };\r\n\r\n  const handleDoubleClick = (e) => {\r\n    if (tool === 'text') {\r\n      const point = getPointer(e);\r\n      const text = prompt('Enter text:');\r\n      if (text) {\r\n        ctxRef.current.font = `${brushSize * 6}px Arial`;\r\n        ctxRef.current.fillStyle = color;\r\n        ctxRef.current.globalAlpha = opacity;\r\n        ctxRef.current.fillText(text, point.x, point.y);\r\n        localUndoStack.current.push(ctxRef.current.getImageData(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT));\r\n        localRedoStack.current = [];\r\n    \r\n        if (onDrawEvent) {\r\n          onDrawEvent({\r\n            type: 'text',\r\n            text,\r\n            point,\r\n            color,\r\n            brushSize,\r\n            opacity,\r\n            canvasData: canvasRef.current.toDataURL('image/png')\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const drawLine = (from, to, settings) => {\r\n    ctxRef.current.save();\r\n    ctxRef.current.beginPath();\r\n    ctxRef.current.moveTo(from.x, from.y);\r\n    ctxRef.current.lineTo(to.x, to.y);\r\n    ctxRef.current.strokeStyle = settings.tool === 'eraser' ? '#fff' : settings.color;\r\n    ctxRef.current.lineWidth = settings.brushSize;\r\n    ctxRef.current.globalAlpha = settings.opacity;\r\n    ctxRef.current.stroke();\r\n    ctxRef.current.restore();\r\n  };\r\n\r\n  const clearCanvas = () => {\r\n    ctxRef.current.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\r\n    localUndoStack.current.push(ctxRef.current.getImageData(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT));\r\n    localRedoStack.current = [];\r\n  };\r\n\r\n  const handleUndo = () => {\r\n    if (localUndoStack.current.length > 1) {\r\n      localRedoStack.current.push(localUndoStack.current.pop());\r\n      const prev = localUndoStack.current[localUndoStack.current.length - 1];\r\n      ctxRef.current.putImageData(prev, 0, 0);\r\n    }\r\n  };\r\n\r\n  const handleRedo = () => {\r\n    if (localRedoStack.current.length > 0) {\r\n      const redoImg = localRedoStack.current.pop();\r\n      ctxRef.current.putImageData(redoImg, 0, 0);\r\n      localUndoStack.current.push(redoImg);\r\n    }\r\n  };\r\n\r\n  // Initialize undo stack on mount\r\n  useEffect(() => {\r\n    localUndoStack.current = [ctxRef.current.getImageData(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT)];\r\n    localRedoStack.current = [];\r\n  }, []);\r\n\r\n  // Draw a full stroke from array of points\r\n  const drawStroke = (points, settings) => {\r\n    if (!points || points.length < 2) return;\r\n    ctxRef.current.save();\r\n    ctxRef.current.beginPath();\r\n    ctxRef.current.moveTo(points[0].x, points[0].y);\r\n    for (let i = 1; i < points.length; i++) {\r\n      ctxRef.current.lineTo(points[i].x, points[i].y);\r\n    }\r\n    ctxRef.current.strokeStyle = settings.tool === 'eraser' ? '#fff' : settings.color;\r\n    ctxRef.current.lineWidth = settings.brushSize;\r\n    ctxRef.current.globalAlpha = settings.opacity;\r\n    ctxRef.current.stroke();\r\n    ctxRef.current.restore();\r\n  };\r\n\r\n  // Draw a shape (rectangle or circle) from event data\r\n  const drawShape = (event) => {\r\n    const { shape, start, end, color, brushSize, opacity } = event;\r\n    ctxRef.current.save();\r\n    ctxRef.current.strokeStyle = color;\r\n    ctxRef.current.lineWidth = brushSize;\r\n    ctxRef.current.globalAlpha = opacity;\r\n    if (shape === 'rectangle') {\r\n      const width = end.x - start.x;\r\n      const height = end.y - start.y;\r\n      ctxRef.current.strokeRect(start.x, start.y, width, height);\r\n    } else if (shape === 'circle') {\r\n      const radius = Math.sqrt(Math.pow(end.x - start.x, 2) + Math.pow(end.y - start.y, 2));\r\n      ctxRef.current.beginPath();\r\n      ctxRef.current.arc(start.x, start.y, radius, 0, 2 * Math.PI);\r\n      ctxRef.current.stroke();\r\n    }\r\n    ctxRef.current.restore();\r\n  };\r\n\r\n  // Draw text from event data\r\n  const drawText = (event) => {\r\n    const { text, point, color, brushSize, opacity } = event;\r\n    ctxRef.current.save();\r\n    ctxRef.current.font = `${brushSize * 6}px Arial`;\r\n    ctxRef.current.fillStyle = color;\r\n    ctxRef.current.globalAlpha = opacity;\r\n    ctxRef.current.fillText(text, point.x, point.y);\r\n    ctxRef.current.restore();\r\n  };\r\n\r\n  return (\r\n    <div style={{ position: 'relative', display: 'inline-block' }}>\r\n      <canvas\r\n        ref={canvasRef}\r\n        width={CANVAS_WIDTH}\r\n        height={CANVAS_HEIGHT}\r\n        style={{\r\n          background: '#fff',\r\n          borderRadius: 16,\r\n          boxShadow: '0 4px 16px rgba(0,0,0,0.07)',\r\n          margin: 24,\r\n          cursor: tool === 'text' ? 'text' : tool === 'eraser' ? 'cell' : 'crosshair',\r\n          touchAction: 'none',\r\n          userSelect: 'none',\r\n          WebkitUserSelect: 'none',\r\n          MozUserSelect: 'none',\r\n          msUserSelect: 'none',\r\n          display: 'block',\r\n          width: '100%',\r\n          height: 'auto',\r\n          maxWidth: '100%',\r\n          maxHeight: '80vh',\r\n          objectFit: 'contain',\r\n        }}\r\n        onPointerDown={handlePointerDown}\r\n        onPointerMove={handlePointerMove}\r\n        onPointerUp={handlePointerUp}\r\n        onDoubleClick={handleDoubleClick}\r\n      />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Canvas; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}