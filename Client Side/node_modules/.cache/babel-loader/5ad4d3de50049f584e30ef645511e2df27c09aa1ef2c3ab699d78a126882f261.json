{"ast":null,"code":"var _jsxFileName = \"F:\\\\Open Project'25\\\\MARS Open Project\\\\Collaborative-whiteboard-with-real-time-drawing\\\\frontend\\\\src\\\\components\\\\Canvas.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useImperativeHandle, forwardRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CANVAS_WIDTH = 1200;\nconst CANVAS_HEIGHT = 700;\nconst Canvas = /*#__PURE__*/_s(/*#__PURE__*/forwardRef(_c = _s(({\n  tool = 'pen',\n  color = '#000000',\n  brushSize = 2,\n  opacity = 1,\n  onDrawEvent,\n  onDrawStart,\n  onDrawEnd,\n  remoteDrawEvent\n}, ref) => {\n  _s();\n  const canvasRef = useRef(null);\n  const ctxRef = useRef(null);\n  const drawing = useRef(false);\n  const startPoint = useRef(null);\n  const snapshot = useRef(null);\n  const localUndoStack = useRef([]);\n  const localRedoStack = useRef([]);\n  const currentStroke = useRef([]);\n  const saveCanvasState = () => {\n    const imageData = ctxRef.current.getImageData(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n    localUndoStack.current.push(imageData);\n    localRedoStack.current = [];\n  };\n  useImperativeHandle(ref, () => ({\n    exportImage: () => canvasRef.current.toDataURL('image/png'),\n    exportPDF: async () => {\n      const jsPDF = (await import('jspdf')).jsPDF;\n      const dataUrl = canvasRef.current.toDataURL('image/png');\n      const pdf = new jsPDF({\n        orientation: 'landscape'\n      });\n      pdf.addImage(dataUrl, 'PNG', 10, 10, 280, 160);\n      return pdf;\n    },\n    clear: () => {\n      clearCanvas();\n    },\n    undo: () => {\n      handleUndo();\n    },\n    redo: () => {\n      handleRedo();\n    },\n    loadImageFromDataUrl: dataUrl => {\n      const img = new window.Image();\n      img.onload = () => {\n        ctxRef.current.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n        ctxRef.current.drawImage(img, 0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n        localUndoStack.current = [ctxRef.current.getImageData(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT)];\n        localRedoStack.current = [];\n      };\n      img.src = dataUrl;\n    }\n  }));\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas.width = CANVAS_WIDTH;\n    canvas.height = CANVAS_HEIGHT;\n    ctxRef.current = canvas.getContext('2d');\n    ctxRef.current.lineCap = 'round';\n    ctxRef.current.lineJoin = 'round';\n    ctxRef.current.globalAlpha = opacity;\n    const blankState = ctxRef.current.getImageData(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n    localUndoStack.current = [blankState];\n    localRedoStack.current = [];\n  }, []);\n  useEffect(() => {\n    if (!remoteDrawEvent) return;\n    const type = remoteDrawEvent.type;\n    if (type === 'stroke') drawStroke(remoteDrawEvent.points, remoteDrawEvent);else if (type === 'draw') drawLine(remoteDrawEvent.prev, remoteDrawEvent.current, remoteDrawEvent);else if (type === 'shape') drawShape(remoteDrawEvent);else if (type === 'text') drawText(remoteDrawEvent);else if (type === 'clear') clearCanvas();\n  }, [remoteDrawEvent]);\n  const getPointer = e => {\n    const rect = canvasRef.current.getBoundingClientRect();\n    const scaleX = canvasRef.current.width / rect.width;\n    const scaleY = canvasRef.current.height / rect.height;\n    return {\n      x: (e.clientX - rect.left) * scaleX,\n      y: (e.clientY - rect.top) * scaleY\n    };\n  };\n  const handlePointerDown = e => {\n    drawing.current = true;\n    const point = getPointer(e);\n    startPoint.current = point;\n    snapshot.current = ctxRef.current.getImageData(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n    currentStroke.current = [point];\n    if (tool === 'pen' || tool === 'eraser') {\n      ctxRef.current.beginPath();\n      ctxRef.current.moveTo(point.x, point.y);\n      ctxRef.current.strokeStyle = tool === 'eraser' ? '#fff' : color;\n      ctxRef.current.lineWidth = brushSize;\n      ctxRef.current.globalAlpha = opacity;\n      onDrawStart === null || onDrawStart === void 0 ? void 0 : onDrawStart(point);\n    }\n  };\n  const handlePointerMove = e => {\n    if (!drawing.current) return;\n    const point = getPointer(e);\n    if (tool === 'pen' || tool === 'eraser') {\n      ctxRef.current.lineTo(point.x, point.y);\n      ctxRef.current.stroke();\n      currentStroke.current.push(point);\n    } else if (tool === 'rectangle' || tool === 'circle') {\n      ctxRef.current.putImageData(snapshot.current, 0, 0);\n      ctxRef.current.strokeStyle = color;\n      ctxRef.current.lineWidth = brushSize;\n      ctxRef.current.globalAlpha = opacity;\n      if (tool === 'rectangle') {\n        ctxRef.current.strokeRect(startPoint.current.x, startPoint.current.y, point.x - startPoint.current.x, point.y - startPoint.current.y);\n      } else {\n        const radius = Math.hypot(point.x - startPoint.current.x, point.y - startPoint.current.y);\n        ctxRef.current.beginPath();\n        ctxRef.current.arc(startPoint.current.x, startPoint.current.y, radius, 0, 2 * Math.PI);\n        ctxRef.current.stroke();\n      }\n    }\n  };\n  const handlePointerUp = e => {\n    if (!drawing.current) return;\n    drawing.current = false;\n    const point = getPointer(e);\n    if (tool === 'rectangle' || tool === 'circle') {\n      handlePointerMove(e);\n      onDrawEvent === null || onDrawEvent === void 0 ? void 0 : onDrawEvent({\n        type: 'shape',\n        shape: tool,\n        start: startPoint.current,\n        end: point,\n        color,\n        brushSize,\n        opacity,\n        canvasData: canvasRef.current.toDataURL('image/png')\n      });\n      saveCanvasState();\n    } else if ((tool === 'pen' || tool === 'eraser') && currentStroke.current.length > 1) {\n      onDrawEvent === null || onDrawEvent === void 0 ? void 0 : onDrawEvent({\n        type: 'stroke',\n        points: currentStroke.current,\n        tool,\n        color,\n        brushSize,\n        opacity,\n        canvasData: canvasRef.current.toDataURL('image/png')\n      });\n      saveCanvasState();\n    }\n    currentStroke.current = [];\n    onDrawEnd === null || onDrawEnd === void 0 ? void 0 : onDrawEnd(point);\n  };\n  const handleDoubleClick = e => {\n    if (tool !== 'text') return;\n    const point = getPointer(e);\n    const text = prompt('Enter text:');\n    if (!text) return;\n    ctxRef.current.font = `${brushSize * 6}px Arial`;\n    ctxRef.current.fillStyle = color;\n    ctxRef.current.globalAlpha = opacity;\n    ctxRef.current.fillText(text, point.x, point.y);\n    onDrawEvent === null || onDrawEvent === void 0 ? void 0 : onDrawEvent({\n      type: 'text',\n      text,\n      point,\n      color,\n      brushSize,\n      opacity,\n      canvasData: canvasRef.current.toDataURL('image/png')\n    });\n    saveCanvasState();\n  };\n  const clearCanvas = () => {\n    ctxRef.current.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n    saveCanvasState();\n  };\n  const handleUndo = () => {\n    if (localUndoStack.current.length > 1) {\n      localRedoStack.current.push(localUndoStack.current.pop());\n      const prev = localUndoStack.current[localUndoStack.current.length - 1];\n      ctxRef.current.putImageData(prev, 0, 0);\n    }\n  };\n  const handleRedo = () => {\n    if (localRedoStack.current.length > 0) {\n      const redoImg = localRedoStack.current.pop();\n      ctxRef.current.putImageData(redoImg, 0, 0);\n      localUndoStack.current.push(redoImg);\n    }\n  };\n  const drawStroke = (points, settings) => {\n    if (!points || points.length < 2) return;\n    ctxRef.current.save();\n    ctxRef.current.beginPath();\n    ctxRef.current.moveTo(points[0].x, points[0].y);\n    for (let i = 1; i < points.length; i++) {\n      ctxRef.current.lineTo(points[i].x, points[i].y);\n    }\n    ctxRef.current.strokeStyle = settings.tool === 'eraser' ? '#fff' : settings.color;\n    ctxRef.current.lineWidth = settings.brushSize;\n    ctxRef.current.globalAlpha = settings.opacity;\n    ctxRef.current.stroke();\n    ctxRef.current.restore();\n  };\n  const drawShape = ({\n    shape,\n    start,\n    end,\n    color,\n    brushSize,\n    opacity\n  }) => {\n    ctxRef.current.save();\n    ctxRef.current.strokeStyle = color;\n    ctxRef.current.lineWidth = brushSize;\n    ctxRef.current.globalAlpha = opacity;\n    if (shape === 'rectangle') {\n      ctxRef.current.strokeRect(start.x, start.y, end.x - start.x, end.y - start.y);\n    } else if (shape === 'circle') {\n      const radius = Math.hypot(end.x - start.x, end.y - start.y);\n      ctxRef.current.beginPath();\n      ctxRef.current.arc(start.x, start.y, radius, 0, 2 * Math.PI);\n      ctxRef.current.stroke();\n    }\n    ctxRef.current.restore();\n  };\n  const drawText = ({\n    text,\n    point,\n    color,\n    brushSize,\n    opacity\n  }) => {\n    ctxRef.current.save();\n    ctxRef.current.font = `${brushSize * 6}px Arial`;\n    ctxRef.current.fillStyle = color;\n    ctxRef.current.globalAlpha = opacity;\n    ctxRef.current.fillText(text, point.x, point.y);\n    ctxRef.current.restore();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative',\n      display: 'inline-block'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        background: '#fff',\n        borderRadius: 16,\n        boxShadow: '0 4px 16px rgba(0,0,0,0.07)',\n        margin: 24,\n        cursor: tool === 'text' ? 'text' : tool === 'eraser' ? 'cell' : 'crosshair',\n        touchAction: 'none',\n        userSelect: 'none',\n        display: 'block',\n        width: '100%',\n        height: 'auto',\n        maxWidth: '100%',\n        maxHeight: '80vh',\n        objectFit: 'contain'\n      },\n      onPointerDown: handlePointerDown,\n      onPointerMove: handlePointerMove,\n      onPointerUp: handlePointerUp,\n      onDoubleClick: handleDoubleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 236,\n    columnNumber: 5\n  }, this);\n}, \"YQXglGjB3Pu75g23uNRlD0Dl+DY=\")), \"YQXglGjB3Pu75g23uNRlD0Dl+DY=\");\n_c2 = Canvas;\nexport default Canvas;\nvar _c, _c2;\n$RefreshReg$(_c, \"Canvas$forwardRef\");\n$RefreshReg$(_c2, \"Canvas\");","map":{"version":3,"names":["React","useRef","useEffect","useImperativeHandle","forwardRef","jsxDEV","_jsxDEV","CANVAS_WIDTH","CANVAS_HEIGHT","Canvas","_s","_c","tool","color","brushSize","opacity","onDrawEvent","onDrawStart","onDrawEnd","remoteDrawEvent","ref","canvasRef","ctxRef","drawing","startPoint","snapshot","localUndoStack","localRedoStack","currentStroke","saveCanvasState","imageData","current","getImageData","push","exportImage","toDataURL","exportPDF","jsPDF","dataUrl","pdf","orientation","addImage","clear","clearCanvas","undo","handleUndo","redo","handleRedo","loadImageFromDataUrl","img","window","Image","onload","clearRect","drawImage","src","canvas","width","height","getContext","lineCap","lineJoin","globalAlpha","blankState","type","drawStroke","points","drawLine","prev","drawShape","drawText","getPointer","e","rect","getBoundingClientRect","scaleX","scaleY","x","clientX","left","y","clientY","top","handlePointerDown","point","beginPath","moveTo","strokeStyle","lineWidth","handlePointerMove","lineTo","stroke","putImageData","strokeRect","radius","Math","hypot","arc","PI","handlePointerUp","shape","start","end","canvasData","length","handleDoubleClick","text","prompt","font","fillStyle","fillText","pop","redoImg","settings","save","i","restore","style","position","display","children","background","borderRadius","boxShadow","margin","cursor","touchAction","userSelect","maxWidth","maxHeight","objectFit","onPointerDown","onPointerMove","onPointerUp","onDoubleClick","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["F:/Open Project'25/MARS Open Project/Collaborative-whiteboard-with-real-time-drawing/frontend/src/components/Canvas.js"],"sourcesContent":["import React, { useRef, useEffect, useImperativeHandle, forwardRef } from 'react';\r\n\r\nconst CANVAS_WIDTH = 1200;\r\nconst CANVAS_HEIGHT = 700;\r\n\r\nconst Canvas = forwardRef(({ \r\n  tool = 'pen', \r\n  color = '#000000', \r\n  brushSize = 2, \r\n  opacity = 1,\r\n  onDrawEvent,\r\n  onDrawStart,\r\n  onDrawEnd,\r\n  remoteDrawEvent,\r\n}, ref) => {\r\n  const canvasRef = useRef(null);\r\n  const ctxRef = useRef(null);\r\n  const drawing = useRef(false);\r\n  const startPoint = useRef(null);\r\n  const snapshot = useRef(null);\r\n  const localUndoStack = useRef([]);\r\n  const localRedoStack = useRef([]);\r\n  const currentStroke = useRef([]);\r\n\r\n  const saveCanvasState = () => {\r\n    const imageData = ctxRef.current.getImageData(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\r\n    localUndoStack.current.push(imageData);\r\n    localRedoStack.current = [];\r\n  };\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    exportImage: () => canvasRef.current.toDataURL('image/png'),\r\n    exportPDF: async () => {\r\n      const jsPDF = (await import('jspdf')).jsPDF;\r\n      const dataUrl = canvasRef.current.toDataURL('image/png');\r\n      const pdf = new jsPDF({ orientation: 'landscape' });\r\n      pdf.addImage(dataUrl, 'PNG', 10, 10, 280, 160);\r\n      return pdf;\r\n    },\r\n    clear: () => {\r\n      clearCanvas();\r\n    },\r\n    undo: () => {\r\n      handleUndo();\r\n    },\r\n    redo: () => {\r\n      handleRedo();\r\n    },\r\n    loadImageFromDataUrl: (dataUrl) => {\r\n      const img = new window.Image();\r\n      img.onload = () => {\r\n        ctxRef.current.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\r\n        ctxRef.current.drawImage(img, 0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\r\n        localUndoStack.current = [ctxRef.current.getImageData(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT)];\r\n        localRedoStack.current = [];\r\n      };\r\n      img.src = dataUrl;\r\n    }\r\n  }));\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    canvas.width = CANVAS_WIDTH;\r\n    canvas.height = CANVAS_HEIGHT;\r\n    ctxRef.current = canvas.getContext('2d');\r\n    ctxRef.current.lineCap = 'round';\r\n    ctxRef.current.lineJoin = 'round';\r\n    ctxRef.current.globalAlpha = opacity;\r\n\r\n    const blankState = ctxRef.current.getImageData(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\r\n    localUndoStack.current = [blankState];\r\n    localRedoStack.current = [];\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!remoteDrawEvent) return;\r\n    const type = remoteDrawEvent.type;\r\n    if (type === 'stroke') drawStroke(remoteDrawEvent.points, remoteDrawEvent);\r\n    else if (type === 'draw') drawLine(remoteDrawEvent.prev, remoteDrawEvent.current, remoteDrawEvent);\r\n    else if (type === 'shape') drawShape(remoteDrawEvent);\r\n    else if (type === 'text') drawText(remoteDrawEvent);\r\n    else if (type === 'clear') clearCanvas();\r\n  }, [remoteDrawEvent]);\r\n\r\n  const getPointer = (e) => {\r\n    const rect = canvasRef.current.getBoundingClientRect();\r\n    const scaleX = canvasRef.current.width / rect.width;\r\n    const scaleY = canvasRef.current.height / rect.height;\r\n    return {\r\n      x: (e.clientX - rect.left) * scaleX,\r\n      y: (e.clientY - rect.top) * scaleY\r\n    };\r\n  };\r\n\r\n  const handlePointerDown = (e) => {\r\n    drawing.current = true;\r\n    const point = getPointer(e);\r\n    startPoint.current = point;\r\n    snapshot.current = ctxRef.current.getImageData(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\r\n    currentStroke.current = [point];\r\n    if (tool === 'pen' || tool === 'eraser') {\r\n      ctxRef.current.beginPath();\r\n      ctxRef.current.moveTo(point.x, point.y);\r\n      ctxRef.current.strokeStyle = tool === 'eraser' ? '#fff' : color;\r\n      ctxRef.current.lineWidth = brushSize;\r\n      ctxRef.current.globalAlpha = opacity;\r\n      onDrawStart?.(point);\r\n    }\r\n  };\r\n\r\n  const handlePointerMove = (e) => {\r\n    if (!drawing.current) return;\r\n    const point = getPointer(e);\r\n    if (tool === 'pen' || tool === 'eraser') {\r\n      ctxRef.current.lineTo(point.x, point.y);\r\n      ctxRef.current.stroke();\r\n      currentStroke.current.push(point);\r\n    } else if (tool === 'rectangle' || tool === 'circle') {\r\n      ctxRef.current.putImageData(snapshot.current, 0, 0);\r\n      ctxRef.current.strokeStyle = color;\r\n      ctxRef.current.lineWidth = brushSize;\r\n      ctxRef.current.globalAlpha = opacity;\r\n      if (tool === 'rectangle') {\r\n        ctxRef.current.strokeRect(startPoint.current.x, startPoint.current.y, point.x - startPoint.current.x, point.y - startPoint.current.y);\r\n      } else {\r\n        const radius = Math.hypot(point.x - startPoint.current.x, point.y - startPoint.current.y);\r\n        ctxRef.current.beginPath();\r\n        ctxRef.current.arc(startPoint.current.x, startPoint.current.y, radius, 0, 2 * Math.PI);\r\n        ctxRef.current.stroke();\r\n      }\r\n    }\r\n  };\r\n\r\n  const handlePointerUp = (e) => {\r\n    if (!drawing.current) return;\r\n    drawing.current = false;\r\n    const point = getPointer(e);\r\n    if (tool === 'rectangle' || tool === 'circle') {\r\n      handlePointerMove(e);\r\n      onDrawEvent?.({\r\n        type: 'shape', shape: tool, start: startPoint.current, end: point,\r\n        color, brushSize, opacity,\r\n        canvasData: canvasRef.current.toDataURL('image/png')\r\n      });\r\n      saveCanvasState();\r\n    } else if ((tool === 'pen' || tool === 'eraser') && currentStroke.current.length > 1) {\r\n      onDrawEvent?.({\r\n        type: 'stroke', points: currentStroke.current,\r\n        tool, color, brushSize, opacity,\r\n        canvasData: canvasRef.current.toDataURL('image/png')\r\n      });\r\n      saveCanvasState();\r\n    }\r\n    currentStroke.current = [];\r\n    onDrawEnd?.(point);\r\n  };\r\n\r\n  const handleDoubleClick = (e) => {\r\n    if (tool !== 'text') return;\r\n    const point = getPointer(e);\r\n    const text = prompt('Enter text:');\r\n    if (!text) return;\r\n    ctxRef.current.font = `${brushSize * 6}px Arial`;\r\n    ctxRef.current.fillStyle = color;\r\n    ctxRef.current.globalAlpha = opacity;\r\n    ctxRef.current.fillText(text, point.x, point.y);\r\n    onDrawEvent?.({\r\n      type: 'text', text, point, color, brushSize, opacity,\r\n      canvasData: canvasRef.current.toDataURL('image/png')\r\n    });\r\n    saveCanvasState();\r\n  };\r\n\r\n  const clearCanvas = () => {\r\n    ctxRef.current.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\r\n    saveCanvasState();\r\n  };\r\n\r\n  const handleUndo = () => {\r\n    if (localUndoStack.current.length > 1) {\r\n      localRedoStack.current.push(localUndoStack.current.pop());\r\n      const prev = localUndoStack.current[localUndoStack.current.length - 1];\r\n      ctxRef.current.putImageData(prev, 0, 0);\r\n    }\r\n  };\r\n\r\n  const handleRedo = () => {\r\n    if (localRedoStack.current.length > 0) {\r\n      const redoImg = localRedoStack.current.pop();\r\n      ctxRef.current.putImageData(redoImg, 0, 0);\r\n      localUndoStack.current.push(redoImg);\r\n    }\r\n  };\r\n\r\n  const drawStroke = (points, settings) => {\r\n    if (!points || points.length < 2) return;\r\n    ctxRef.current.save();\r\n    ctxRef.current.beginPath();\r\n    ctxRef.current.moveTo(points[0].x, points[0].y);\r\n    for (let i = 1; i < points.length; i++) {\r\n      ctxRef.current.lineTo(points[i].x, points[i].y);\r\n    }\r\n    ctxRef.current.strokeStyle = settings.tool === 'eraser' ? '#fff' : settings.color;\r\n    ctxRef.current.lineWidth = settings.brushSize;\r\n    ctxRef.current.globalAlpha = settings.opacity;\r\n    ctxRef.current.stroke();\r\n    ctxRef.current.restore();\r\n  };\r\n\r\n  const drawShape = ({ shape, start, end, color, brushSize, opacity }) => {\r\n    ctxRef.current.save();\r\n    ctxRef.current.strokeStyle = color;\r\n    ctxRef.current.lineWidth = brushSize;\r\n    ctxRef.current.globalAlpha = opacity;\r\n    if (shape === 'rectangle') {\r\n      ctxRef.current.strokeRect(start.x, start.y, end.x - start.x, end.y - start.y);\r\n    } else if (shape === 'circle') {\r\n      const radius = Math.hypot(end.x - start.x, end.y - start.y);\r\n      ctxRef.current.beginPath();\r\n      ctxRef.current.arc(start.x, start.y, radius, 0, 2 * Math.PI);\r\n      ctxRef.current.stroke();\r\n    }\r\n    ctxRef.current.restore();\r\n  };\r\n\r\n  const drawText = ({ text, point, color, brushSize, opacity }) => {\r\n    ctxRef.current.save();\r\n    ctxRef.current.font = `${brushSize * 6}px Arial`;\r\n    ctxRef.current.fillStyle = color;\r\n    ctxRef.current.globalAlpha = opacity;\r\n    ctxRef.current.fillText(text, point.x, point.y);\r\n    ctxRef.current.restore();\r\n  };\r\n\r\n  return (\r\n    <div style={{ position: 'relative', display: 'inline-block' }}>\r\n      <canvas\r\n        ref={canvasRef}\r\n        style={{\r\n          background: '#fff',\r\n          borderRadius: 16,\r\n          boxShadow: '0 4px 16px rgba(0,0,0,0.07)',\r\n          margin: 24,\r\n          cursor: tool === 'text' ? 'text' : tool === 'eraser' ? 'cell' : 'crosshair',\r\n          touchAction: 'none',\r\n          userSelect: 'none',\r\n          display: 'block',\r\n          width: '100%',\r\n          height: 'auto',\r\n          maxWidth: '100%',\r\n          maxHeight: '80vh',\r\n          objectFit: 'contain',\r\n        }}\r\n        onPointerDown={handlePointerDown}\r\n        onPointerMove={handlePointerMove}\r\n        onPointerUp={handlePointerUp}\r\n        onDoubleClick={handleDoubleClick}\r\n      />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Canvas;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}