{"ast":null,"code":"var _jsxFileName = \"F:\\\\Open Project'25\\\\MARS Open Project\\\\Collaborative-whiteboard-with-real-time-drawing\\\\frontend\\\\src\\\\components\\\\Canvas.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useImperativeHandle, forwardRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CANVAS_WIDTH = 1200;\nconst CANVAS_HEIGHT = 700;\nconst Canvas = /*#__PURE__*/_s(/*#__PURE__*/forwardRef(_c = _s(({\n  tool = 'pen',\n  color = '#000000',\n  brushSize = 2,\n  opacity = 1,\n  onDrawEvent,\n  onDrawStart,\n  onDrawEnd,\n  remoteDrawEvent\n}, ref) => {\n  _s();\n  const canvasRef = useRef(null);\n  const ctxRef = useRef(null);\n  const drawing = useRef(false);\n  const startPoint = useRef(null);\n  const snapshot = useRef(null);\n  const localUndoStack = useRef([]);\n  const localRedoStack = useRef([]);\n  const currentStroke = useRef([]);\n  useImperativeHandle(ref, () => ({\n    exportImage: () => canvasRef.current.toDataURL('image/png'),\n    exportPDF: async () => {\n      const jsPDF = (await import('jspdf')).jsPDF;\n      const pdf = new jsPDF({\n        orientation: 'landscape'\n      });\n      pdf.addImage(canvasRef.current.toDataURL('image/png'), 'PNG', 10, 10, 280, 160);\n      return pdf;\n    },\n    clear: () => clearCanvas(),\n    undo: () => handleUndo(),\n    redo: () => handleRedo(),\n    loadImageFromDataUrl: dataUrl => {\n      const img = new Image();\n      img.onload = () => {\n        ctxRef.current.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n        ctxRef.current.drawImage(img, 0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n        pushToUndoStack();\n      };\n      img.src = dataUrl;\n    }\n  }));\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas.width = CANVAS_WIDTH;\n    canvas.height = CANVAS_HEIGHT;\n    const ctx = canvas.getContext('2d');\n    ctxRef.current = ctx;\n    ctx.lineCap = 'round';\n    ctx.lineJoin = 'round';\n    ctx.globalAlpha = opacity;\n\n    // Initial blank canvas state\n    setTimeout(() => {\n      pushToUndoStack();\n    }, 0);\n  }, [opacity]);\n  useEffect(() => {\n    if (!remoteDrawEvent) return;\n    const {\n      type\n    } = remoteDrawEvent;\n    if (type === 'stroke') drawStroke(remoteDrawEvent.points, remoteDrawEvent);else if (type === 'draw') drawLine(remoteDrawEvent.prev, remoteDrawEvent.current, remoteDrawEvent);else if (type === 'shape') drawShape(remoteDrawEvent);else if (type === 'text') drawText(remoteDrawEvent);else if (type === 'clear') clearCanvas();\n  }, [remoteDrawEvent]);\n  const getPointer = e => {\n    const rect = canvasRef.current.getBoundingClientRect();\n    const scaleX = CANVAS_WIDTH / rect.width;\n    const scaleY = CANVAS_HEIGHT / rect.height;\n    return {\n      x: (e.clientX - rect.left) * scaleX,\n      y: (e.clientY - rect.top) * scaleY\n    };\n  };\n  const handlePointerDown = e => {\n    drawing.current = true;\n    const point = getPointer(e);\n    startPoint.current = point;\n    snapshot.current = ctxRef.current.getImageData(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n    currentStroke.current = [point];\n    if (tool === 'pen' || tool === 'eraser') {\n      ctxRef.current.beginPath();\n      ctxRef.current.moveTo(point.x, point.y);\n      ctxRef.current.strokeStyle = tool === 'eraser' ? '#ffffff' : color;\n      ctxRef.current.lineWidth = brushSize;\n      ctxRef.current.globalAlpha = opacity;\n      onDrawStart === null || onDrawStart === void 0 ? void 0 : onDrawStart(point);\n    }\n  };\n  const handlePointerMove = e => {\n    if (!drawing.current) return;\n    const point = getPointer(e);\n    if (tool === 'pen' || tool === 'eraser') {\n      ctxRef.current.lineTo(point.x, point.y);\n      ctxRef.current.strokeStyle = tool === 'eraser' ? '#ffffff' : color;\n      ctxRef.current.lineWidth = brushSize;\n      ctxRef.current.globalAlpha = opacity;\n      ctxRef.current.stroke();\n      currentStroke.current.push(point);\n    } else if (tool === 'rectangle' || tool === 'circle') {\n      ctxRef.current.putImageData(snapshot.current, 0, 0);\n      ctxRef.current.strokeStyle = color;\n      ctxRef.current.lineWidth = brushSize;\n      ctxRef.current.globalAlpha = opacity;\n      if (tool === 'rectangle') {\n        ctxRef.current.strokeRect(startPoint.current.x, startPoint.current.y, point.x - startPoint.current.x, point.y - startPoint.current.y);\n      } else {\n        const radius = Math.hypot(point.x - startPoint.current.x, point.y - startPoint.current.y);\n        ctxRef.current.beginPath();\n        ctxRef.current.arc(startPoint.current.x, startPoint.current.y, radius, 0, 2 * Math.PI);\n        ctxRef.current.stroke();\n      }\n    }\n  };\n  const handlePointerUp = e => {\n    if (!drawing.current) return;\n    drawing.current = false;\n    const point = getPointer(e);\n    if (tool === 'rectangle' || tool === 'circle') {\n      handlePointerMove(e);\n      onDrawEvent === null || onDrawEvent === void 0 ? void 0 : onDrawEvent({\n        type: 'shape',\n        shape: tool,\n        start: startPoint.current,\n        end: point,\n        color,\n        brushSize,\n        opacity,\n        canvasData: canvasRef.current.toDataURL()\n      });\n    } else if ((tool === 'pen' || tool === 'eraser') && currentStroke.current.length > 1) {\n      onDrawEvent === null || onDrawEvent === void 0 ? void 0 : onDrawEvent({\n        type: 'stroke',\n        points: currentStroke.current,\n        tool,\n        color,\n        brushSize,\n        opacity,\n        canvasData: canvasRef.current.toDataURL()\n      });\n    } else {\n      onDrawEvent === null || onDrawEvent === void 0 ? void 0 : onDrawEvent({\n        type: 'end',\n        tool,\n        color,\n        brushSize,\n        opacity,\n        canvasData: canvasRef.current.toDataURL()\n      });\n    }\n    currentStroke.current = [];\n    pushToUndoStack();\n    onDrawEnd === null || onDrawEnd === void 0 ? void 0 : onDrawEnd(point);\n  };\n  const handleDoubleClick = e => {\n    if (tool === 'text') {\n      const point = getPointer(e);\n      const text = prompt('Enter text:');\n      if (text) {\n        ctxRef.current.font = `${brushSize * 6}px Arial`;\n        ctxRef.current.fillStyle = color;\n        ctxRef.current.globalAlpha = opacity;\n        ctxRef.current.fillText(text, point.x, point.y);\n        pushToUndoStack();\n        onDrawEvent === null || onDrawEvent === void 0 ? void 0 : onDrawEvent({\n          type: 'text',\n          text,\n          point,\n          color,\n          brushSize,\n          opacity,\n          canvasData: canvasRef.current.toDataURL()\n        });\n      }\n    }\n  };\n  const pushToUndoStack = () => {\n    try {\n      const snap = ctxRef.current.getImageData(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n      localUndoStack.current.push(snap);\n      localRedoStack.current = [];\n    } catch (err) {\n      console.warn('Undo snapshot failed:', err);\n    }\n  };\n  const handleUndo = () => {\n    if (localUndoStack.current.length > 1) {\n      const current = localUndoStack.current.pop();\n      localRedoStack.current.push(current);\n      const previous = localUndoStack.current[localUndoStack.current.length - 1];\n      ctxRef.current.putImageData(previous, 0, 0);\n    }\n  };\n  const handleRedo = () => {\n    if (localRedoStack.current.length > 0) {\n      const redoImg = localRedoStack.current.pop();\n      ctxRef.current.putImageData(redoImg, 0, 0);\n      localUndoStack.current.push(redoImg);\n    }\n  };\n  const drawLine = (from, to, settings) => {\n    ctxRef.current.save();\n    ctxRef.current.beginPath();\n    ctxRef.current.moveTo(from.x, from.y);\n    ctxRef.current.lineTo(to.x, to.y);\n    ctxRef.current.strokeStyle = settings.tool === 'eraser' ? '#ffffff' : settings.color;\n    ctxRef.current.lineWidth = settings.brushSize;\n    ctxRef.current.globalAlpha = settings.opacity;\n    ctxRef.current.stroke();\n    ctxRef.current.restore();\n  };\n  const drawStroke = (points, settings) => {\n    if (!points || points.length < 2) return;\n    ctxRef.current.save();\n    ctxRef.current.beginPath();\n    ctxRef.current.moveTo(points[0].x, points[0].y);\n    for (let i = 1; i < points.length; i++) {\n      ctxRef.current.lineTo(points[i].x, points[i].y);\n    }\n    ctxRef.current.strokeStyle = settings.tool === 'eraser' ? '#ffffff' : settings.color;\n    ctxRef.current.lineWidth = settings.brushSize;\n    ctxRef.current.globalAlpha = settings.opacity;\n    ctxRef.current.stroke();\n    ctxRef.current.restore();\n  };\n  const drawShape = ({\n    shape,\n    start,\n    end,\n    color,\n    brushSize,\n    opacity\n  }) => {\n    ctxRef.current.save();\n    ctxRef.current.strokeStyle = color;\n    ctxRef.current.lineWidth = brushSize;\n    ctxRef.current.globalAlpha = opacity;\n    if (shape === 'rectangle') {\n      ctxRef.current.strokeRect(start.x, start.y, end.x - start.x, end.y - start.y);\n    } else if (shape === 'circle') {\n      const radius = Math.hypot(end.x - start.x, end.y - start.y);\n      ctxRef.current.beginPath();\n      ctxRef.current.arc(start.x, start.y, radius, 0, 2 * Math.PI);\n      ctxRef.current.stroke();\n    }\n    ctxRef.current.restore();\n  };\n  const drawText = ({\n    text,\n    point,\n    color,\n    brushSize,\n    opacity\n  }) => {\n    ctxRef.current.save();\n    ctxRef.current.font = `${brushSize * 6}px Arial`;\n    ctxRef.current.fillStyle = color;\n    ctxRef.current.globalAlpha = opacity;\n    ctxRef.current.fillText(text, point.x, point.y);\n    ctxRef.current.restore();\n  };\n  const clearCanvas = () => {\n    ctxRef.current.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n    pushToUndoStack();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative',\n      display: 'inline-block'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: CANVAS_WIDTH,\n      height: CANVAS_HEIGHT,\n      style: {\n        background: '#fff',\n        borderRadius: 16,\n        boxShadow: '0 4px 16px rgba(0,0,0,0.07)',\n        margin: 24,\n        cursor: tool === 'text' ? 'text' : tool === 'eraser' ? 'cell' : 'crosshair',\n        touchAction: 'none',\n        userSelect: 'none',\n        maxWidth: '100%',\n        maxHeight: '80vh',\n        objectFit: 'contain'\n      },\n      onPointerDown: handlePointerDown,\n      onPointerMove: handlePointerMove,\n      onPointerUp: handlePointerUp,\n      onDoubleClick: handleDoubleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 276,\n    columnNumber: 5\n  }, this);\n}, \"YQXglGjB3Pu75g23uNRlD0Dl+DY=\")), \"YQXglGjB3Pu75g23uNRlD0Dl+DY=\");\n_c2 = Canvas;\nexport default Canvas;\nvar _c, _c2;\n$RefreshReg$(_c, \"Canvas$forwardRef\");\n$RefreshReg$(_c2, \"Canvas\");","map":{"version":3,"names":["React","useRef","useEffect","useImperativeHandle","forwardRef","jsxDEV","_jsxDEV","CANVAS_WIDTH","CANVAS_HEIGHT","Canvas","_s","_c","tool","color","brushSize","opacity","onDrawEvent","onDrawStart","onDrawEnd","remoteDrawEvent","ref","canvasRef","ctxRef","drawing","startPoint","snapshot","localUndoStack","localRedoStack","currentStroke","exportImage","current","toDataURL","exportPDF","jsPDF","pdf","orientation","addImage","clear","clearCanvas","undo","handleUndo","redo","handleRedo","loadImageFromDataUrl","dataUrl","img","Image","onload","clearRect","drawImage","pushToUndoStack","src","canvas","width","height","ctx","getContext","lineCap","lineJoin","globalAlpha","setTimeout","type","drawStroke","points","drawLine","prev","drawShape","drawText","getPointer","e","rect","getBoundingClientRect","scaleX","scaleY","x","clientX","left","y","clientY","top","handlePointerDown","point","getImageData","beginPath","moveTo","strokeStyle","lineWidth","handlePointerMove","lineTo","stroke","push","putImageData","strokeRect","radius","Math","hypot","arc","PI","handlePointerUp","shape","start","end","canvasData","length","handleDoubleClick","text","prompt","font","fillStyle","fillText","snap","err","console","warn","pop","previous","redoImg","from","to","settings","save","restore","i","style","position","display","children","background","borderRadius","boxShadow","margin","cursor","touchAction","userSelect","maxWidth","maxHeight","objectFit","onPointerDown","onPointerMove","onPointerUp","onDoubleClick","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["F:/Open Project'25/MARS Open Project/Collaborative-whiteboard-with-real-time-drawing/frontend/src/components/Canvas.js"],"sourcesContent":["import React, { useRef, useEffect, useImperativeHandle, forwardRef } from 'react';\r\n\r\nconst CANVAS_WIDTH = 1200;\r\nconst CANVAS_HEIGHT = 700;\r\n\r\nconst Canvas = forwardRef(({\r\n  tool = 'pen',\r\n  color = '#000000',\r\n  brushSize = 2,\r\n  opacity = 1,\r\n  onDrawEvent,\r\n  onDrawStart,\r\n  onDrawEnd,\r\n  remoteDrawEvent\r\n}, ref) => {\r\n  const canvasRef = useRef(null);\r\n  const ctxRef = useRef(null);\r\n  const drawing = useRef(false);\r\n  const startPoint = useRef(null);\r\n  const snapshot = useRef(null);\r\n  const localUndoStack = useRef([]);\r\n  const localRedoStack = useRef([]);\r\n  const currentStroke = useRef([]);\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    exportImage: () => canvasRef.current.toDataURL('image/png'),\r\n    exportPDF: async () => {\r\n      const jsPDF = (await import('jspdf')).jsPDF;\r\n      const pdf = new jsPDF({ orientation: 'landscape' });\r\n      pdf.addImage(canvasRef.current.toDataURL('image/png'), 'PNG', 10, 10, 280, 160);\r\n      return pdf;\r\n    },\r\n    clear: () => clearCanvas(),\r\n    undo: () => handleUndo(),\r\n    redo: () => handleRedo(),\r\n    loadImageFromDataUrl: (dataUrl) => {\r\n      const img = new Image();\r\n      img.onload = () => {\r\n        ctxRef.current.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\r\n        ctxRef.current.drawImage(img, 0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\r\n        pushToUndoStack();\r\n      };\r\n      img.src = dataUrl;\r\n    }\r\n  }));\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    canvas.width = CANVAS_WIDTH;\r\n    canvas.height = CANVAS_HEIGHT;\r\n    const ctx = canvas.getContext('2d');\r\n    ctxRef.current = ctx;\r\n    ctx.lineCap = 'round';\r\n    ctx.lineJoin = 'round';\r\n    ctx.globalAlpha = opacity;\r\n\r\n    // Initial blank canvas state\r\n    setTimeout(() => {\r\n      pushToUndoStack();\r\n    }, 0);\r\n  }, [opacity]);\r\n\r\n  useEffect(() => {\r\n    if (!remoteDrawEvent) return;\r\n    const { type } = remoteDrawEvent;\r\n    if (type === 'stroke') drawStroke(remoteDrawEvent.points, remoteDrawEvent);\r\n    else if (type === 'draw') drawLine(remoteDrawEvent.prev, remoteDrawEvent.current, remoteDrawEvent);\r\n    else if (type === 'shape') drawShape(remoteDrawEvent);\r\n    else if (type === 'text') drawText(remoteDrawEvent);\r\n    else if (type === 'clear') clearCanvas();\r\n  }, [remoteDrawEvent]);\r\n\r\n  const getPointer = (e) => {\r\n    const rect = canvasRef.current.getBoundingClientRect();\r\n    const scaleX = CANVAS_WIDTH / rect.width;\r\n    const scaleY = CANVAS_HEIGHT / rect.height;\r\n    return {\r\n      x: (e.clientX - rect.left) * scaleX,\r\n      y: (e.clientY - rect.top) * scaleY\r\n    };\r\n  };\r\n\r\n  const handlePointerDown = (e) => {\r\n    drawing.current = true;\r\n    const point = getPointer(e);\r\n    startPoint.current = point;\r\n    snapshot.current = ctxRef.current.getImageData(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\r\n    currentStroke.current = [point];\r\n\r\n    if (tool === 'pen' || tool === 'eraser') {\r\n      ctxRef.current.beginPath();\r\n      ctxRef.current.moveTo(point.x, point.y);\r\n      ctxRef.current.strokeStyle = tool === 'eraser' ? '#ffffff' : color;\r\n      ctxRef.current.lineWidth = brushSize;\r\n      ctxRef.current.globalAlpha = opacity;\r\n      onDrawStart?.(point);\r\n    }\r\n  };\r\n\r\n  const handlePointerMove = (e) => {\r\n    if (!drawing.current) return;\r\n    const point = getPointer(e);\r\n\r\n    if (tool === 'pen' || tool === 'eraser') {\r\n      ctxRef.current.lineTo(point.x, point.y);\r\n      ctxRef.current.strokeStyle = tool === 'eraser' ? '#ffffff' : color;\r\n      ctxRef.current.lineWidth = brushSize;\r\n      ctxRef.current.globalAlpha = opacity;\r\n      ctxRef.current.stroke();\r\n      currentStroke.current.push(point);\r\n    } else if (tool === 'rectangle' || tool === 'circle') {\r\n      ctxRef.current.putImageData(snapshot.current, 0, 0);\r\n      ctxRef.current.strokeStyle = color;\r\n      ctxRef.current.lineWidth = brushSize;\r\n      ctxRef.current.globalAlpha = opacity;\r\n      if (tool === 'rectangle') {\r\n        ctxRef.current.strokeRect(startPoint.current.x, startPoint.current.y, point.x - startPoint.current.x, point.y - startPoint.current.y);\r\n      } else {\r\n        const radius = Math.hypot(point.x - startPoint.current.x, point.y - startPoint.current.y);\r\n        ctxRef.current.beginPath();\r\n        ctxRef.current.arc(startPoint.current.x, startPoint.current.y, radius, 0, 2 * Math.PI);\r\n        ctxRef.current.stroke();\r\n      }\r\n    }\r\n  };\r\n\r\n  const handlePointerUp = (e) => {\r\n    if (!drawing.current) return;\r\n    drawing.current = false;\r\n    const point = getPointer(e);\r\n    if (tool === 'rectangle' || tool === 'circle') {\r\n      handlePointerMove(e);\r\n      onDrawEvent?.({\r\n        type: 'shape',\r\n        shape: tool,\r\n        start: startPoint.current,\r\n        end: point,\r\n        color,\r\n        brushSize,\r\n        opacity,\r\n        canvasData: canvasRef.current.toDataURL()\r\n      });\r\n    } else if ((tool === 'pen' || tool === 'eraser') && currentStroke.current.length > 1) {\r\n      onDrawEvent?.({\r\n        type: 'stroke',\r\n        points: currentStroke.current,\r\n        tool,\r\n        color,\r\n        brushSize,\r\n        opacity,\r\n        canvasData: canvasRef.current.toDataURL()\r\n      });\r\n    } else {\r\n      onDrawEvent?.({\r\n        type: 'end',\r\n        tool,\r\n        color,\r\n        brushSize,\r\n        opacity,\r\n        canvasData: canvasRef.current.toDataURL()\r\n      });\r\n    }\r\n    currentStroke.current = [];\r\n    pushToUndoStack();\r\n    onDrawEnd?.(point);\r\n  };\r\n\r\n  const handleDoubleClick = (e) => {\r\n    if (tool === 'text') {\r\n      const point = getPointer(e);\r\n      const text = prompt('Enter text:');\r\n      if (text) {\r\n        ctxRef.current.font = `${brushSize * 6}px Arial`;\r\n        ctxRef.current.fillStyle = color;\r\n        ctxRef.current.globalAlpha = opacity;\r\n        ctxRef.current.fillText(text, point.x, point.y);\r\n        pushToUndoStack();\r\n        onDrawEvent?.({\r\n          type: 'text',\r\n          text,\r\n          point,\r\n          color,\r\n          brushSize,\r\n          opacity,\r\n          canvasData: canvasRef.current.toDataURL()\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const pushToUndoStack = () => {\r\n    try {\r\n      const snap = ctxRef.current.getImageData(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\r\n      localUndoStack.current.push(snap);\r\n      localRedoStack.current = [];\r\n    } catch (err) {\r\n      console.warn('Undo snapshot failed:', err);\r\n    }\r\n  };\r\n\r\n  const handleUndo = () => {\r\n    if (localUndoStack.current.length > 1) {\r\n      const current = localUndoStack.current.pop();\r\n      localRedoStack.current.push(current);\r\n      const previous = localUndoStack.current[localUndoStack.current.length - 1];\r\n      ctxRef.current.putImageData(previous, 0, 0);\r\n    }\r\n  };\r\n\r\n  const handleRedo = () => {\r\n    if (localRedoStack.current.length > 0) {\r\n      const redoImg = localRedoStack.current.pop();\r\n      ctxRef.current.putImageData(redoImg, 0, 0);\r\n      localUndoStack.current.push(redoImg);\r\n    }\r\n  };\r\n\r\n  const drawLine = (from, to, settings) => {\r\n    ctxRef.current.save();\r\n    ctxRef.current.beginPath();\r\n    ctxRef.current.moveTo(from.x, from.y);\r\n    ctxRef.current.lineTo(to.x, to.y);\r\n    ctxRef.current.strokeStyle = settings.tool === 'eraser' ? '#ffffff' : settings.color;\r\n    ctxRef.current.lineWidth = settings.brushSize;\r\n    ctxRef.current.globalAlpha = settings.opacity;\r\n    ctxRef.current.stroke();\r\n    ctxRef.current.restore();\r\n  };\r\n\r\n  const drawStroke = (points, settings) => {\r\n    if (!points || points.length < 2) return;\r\n    ctxRef.current.save();\r\n    ctxRef.current.beginPath();\r\n    ctxRef.current.moveTo(points[0].x, points[0].y);\r\n    for (let i = 1; i < points.length; i++) {\r\n      ctxRef.current.lineTo(points[i].x, points[i].y);\r\n    }\r\n    ctxRef.current.strokeStyle = settings.tool === 'eraser' ? '#ffffff' : settings.color;\r\n    ctxRef.current.lineWidth = settings.brushSize;\r\n    ctxRef.current.globalAlpha = settings.opacity;\r\n    ctxRef.current.stroke();\r\n    ctxRef.current.restore();\r\n  };\r\n\r\n  const drawShape = ({ shape, start, end, color, brushSize, opacity }) => {\r\n    ctxRef.current.save();\r\n    ctxRef.current.strokeStyle = color;\r\n    ctxRef.current.lineWidth = brushSize;\r\n    ctxRef.current.globalAlpha = opacity;\r\n    if (shape === 'rectangle') {\r\n      ctxRef.current.strokeRect(start.x, start.y, end.x - start.x, end.y - start.y);\r\n    } else if (shape === 'circle') {\r\n      const radius = Math.hypot(end.x - start.x, end.y - start.y);\r\n      ctxRef.current.beginPath();\r\n      ctxRef.current.arc(start.x, start.y, radius, 0, 2 * Math.PI);\r\n      ctxRef.current.stroke();\r\n    }\r\n    ctxRef.current.restore();\r\n  };\r\n\r\n  const drawText = ({ text, point, color, brushSize, opacity }) => {\r\n    ctxRef.current.save();\r\n    ctxRef.current.font = `${brushSize * 6}px Arial`;\r\n    ctxRef.current.fillStyle = color;\r\n    ctxRef.current.globalAlpha = opacity;\r\n    ctxRef.current.fillText(text, point.x, point.y);\r\n    ctxRef.current.restore();\r\n  };\r\n\r\n  const clearCanvas = () => {\r\n    ctxRef.current.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\r\n    pushToUndoStack();\r\n  };\r\n\r\n  return (\r\n    <div style={{ position: 'relative', display: 'inline-block' }}>\r\n      <canvas\r\n        ref={canvasRef}\r\n        width={CANVAS_WIDTH}\r\n        height={CANVAS_HEIGHT}\r\n        style={{\r\n          background: '#fff',\r\n          borderRadius: 16,\r\n          boxShadow: '0 4px 16px rgba(0,0,0,0.07)',\r\n          margin: 24,\r\n          cursor: tool === 'text' ? 'text' : tool === 'eraser' ? 'cell' : 'crosshair',\r\n          touchAction: 'none',\r\n          userSelect: 'none',\r\n          maxWidth: '100%',\r\n          maxHeight: '80vh',\r\n          objectFit: 'contain'\r\n        }}\r\n        onPointerDown={handlePointerDown}\r\n        onPointerMove={handlePointerMove}\r\n        onPointerUp={handlePointerUp}\r\n        onDoubleClick={handleDoubleClick}\r\n      />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Canvas;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,mBAAmB,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElF,MAAMC,YAAY,GAAG,IAAI;AACzB,MAAMC,aAAa,GAAG,GAAG;AAEzB,MAAMC,MAAM,gBAAAC,EAAA,cAAGN,UAAU,CAAAO,EAAA,GAAAD,EAAA,CAAC,CAAC;EACzBE,IAAI,GAAG,KAAK;EACZC,KAAK,GAAG,SAAS;EACjBC,SAAS,GAAG,CAAC;EACbC,OAAO,GAAG,CAAC;EACXC,WAAW;EACXC,WAAW;EACXC,SAAS;EACTC;AACF,CAAC,EAAEC,GAAG,KAAK;EAAAV,EAAA;EACT,MAAMW,SAAS,GAAGpB,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMqB,MAAM,GAAGrB,MAAM,CAAC,IAAI,CAAC;EAC3B,MAAMsB,OAAO,GAAGtB,MAAM,CAAC,KAAK,CAAC;EAC7B,MAAMuB,UAAU,GAAGvB,MAAM,CAAC,IAAI,CAAC;EAC/B,MAAMwB,QAAQ,GAAGxB,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMyB,cAAc,GAAGzB,MAAM,CAAC,EAAE,CAAC;EACjC,MAAM0B,cAAc,GAAG1B,MAAM,CAAC,EAAE,CAAC;EACjC,MAAM2B,aAAa,GAAG3B,MAAM,CAAC,EAAE,CAAC;EAEhCE,mBAAmB,CAACiB,GAAG,EAAE,OAAO;IAC9BS,WAAW,EAAEA,CAAA,KAAMR,SAAS,CAACS,OAAO,CAACC,SAAS,CAAC,WAAW,CAAC;IAC3DC,SAAS,EAAE,MAAAA,CAAA,KAAY;MACrB,MAAMC,KAAK,GAAG,CAAC,MAAM,MAAM,CAAC,OAAO,CAAC,EAAEA,KAAK;MAC3C,MAAMC,GAAG,GAAG,IAAID,KAAK,CAAC;QAAEE,WAAW,EAAE;MAAY,CAAC,CAAC;MACnDD,GAAG,CAACE,QAAQ,CAACf,SAAS,CAACS,OAAO,CAACC,SAAS,CAAC,WAAW,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;MAC/E,OAAOG,GAAG;IACZ,CAAC;IACDG,KAAK,EAAEA,CAAA,KAAMC,WAAW,CAAC,CAAC;IAC1BC,IAAI,EAAEA,CAAA,KAAMC,UAAU,CAAC,CAAC;IACxBC,IAAI,EAAEA,CAAA,KAAMC,UAAU,CAAC,CAAC;IACxBC,oBAAoB,EAAGC,OAAO,IAAK;MACjC,MAAMC,GAAG,GAAG,IAAIC,KAAK,CAAC,CAAC;MACvBD,GAAG,CAACE,MAAM,GAAG,MAAM;QACjBzB,MAAM,CAACQ,OAAO,CAACkB,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEzC,YAAY,EAAEC,aAAa,CAAC;QAC3Dc,MAAM,CAACQ,OAAO,CAACmB,SAAS,CAACJ,GAAG,EAAE,CAAC,EAAE,CAAC,EAAEtC,YAAY,EAAEC,aAAa,CAAC;QAChE0C,eAAe,CAAC,CAAC;MACnB,CAAC;MACDL,GAAG,CAACM,GAAG,GAAGP,OAAO;IACnB;EACF,CAAC,CAAC,CAAC;EAEH1C,SAAS,CAAC,MAAM;IACd,MAAMkD,MAAM,GAAG/B,SAAS,CAACS,OAAO;IAChCsB,MAAM,CAACC,KAAK,GAAG9C,YAAY;IAC3B6C,MAAM,CAACE,MAAM,GAAG9C,aAAa;IAC7B,MAAM+C,GAAG,GAAGH,MAAM,CAACI,UAAU,CAAC,IAAI,CAAC;IACnClC,MAAM,CAACQ,OAAO,GAAGyB,GAAG;IACpBA,GAAG,CAACE,OAAO,GAAG,OAAO;IACrBF,GAAG,CAACG,QAAQ,GAAG,OAAO;IACtBH,GAAG,CAACI,WAAW,GAAG5C,OAAO;;IAEzB;IACA6C,UAAU,CAAC,MAAM;MACfV,eAAe,CAAC,CAAC;IACnB,CAAC,EAAE,CAAC,CAAC;EACP,CAAC,EAAE,CAACnC,OAAO,CAAC,CAAC;EAEbb,SAAS,CAAC,MAAM;IACd,IAAI,CAACiB,eAAe,EAAE;IACtB,MAAM;MAAE0C;IAAK,CAAC,GAAG1C,eAAe;IAChC,IAAI0C,IAAI,KAAK,QAAQ,EAAEC,UAAU,CAAC3C,eAAe,CAAC4C,MAAM,EAAE5C,eAAe,CAAC,CAAC,KACtE,IAAI0C,IAAI,KAAK,MAAM,EAAEG,QAAQ,CAAC7C,eAAe,CAAC8C,IAAI,EAAE9C,eAAe,CAACW,OAAO,EAAEX,eAAe,CAAC,CAAC,KAC9F,IAAI0C,IAAI,KAAK,OAAO,EAAEK,SAAS,CAAC/C,eAAe,CAAC,CAAC,KACjD,IAAI0C,IAAI,KAAK,MAAM,EAAEM,QAAQ,CAAChD,eAAe,CAAC,CAAC,KAC/C,IAAI0C,IAAI,KAAK,OAAO,EAAEvB,WAAW,CAAC,CAAC;EAC1C,CAAC,EAAE,CAACnB,eAAe,CAAC,CAAC;EAErB,MAAMiD,UAAU,GAAIC,CAAC,IAAK;IACxB,MAAMC,IAAI,GAAGjD,SAAS,CAACS,OAAO,CAACyC,qBAAqB,CAAC,CAAC;IACtD,MAAMC,MAAM,GAAGjE,YAAY,GAAG+D,IAAI,CAACjB,KAAK;IACxC,MAAMoB,MAAM,GAAGjE,aAAa,GAAG8D,IAAI,CAAChB,MAAM;IAC1C,OAAO;MACLoB,CAAC,EAAE,CAACL,CAAC,CAACM,OAAO,GAAGL,IAAI,CAACM,IAAI,IAAIJ,MAAM;MACnCK,CAAC,EAAE,CAACR,CAAC,CAACS,OAAO,GAAGR,IAAI,CAACS,GAAG,IAAIN;IAC9B,CAAC;EACH,CAAC;EAED,MAAMO,iBAAiB,GAAIX,CAAC,IAAK;IAC/B9C,OAAO,CAACO,OAAO,GAAG,IAAI;IACtB,MAAMmD,KAAK,GAAGb,UAAU,CAACC,CAAC,CAAC;IAC3B7C,UAAU,CAACM,OAAO,GAAGmD,KAAK;IAC1BxD,QAAQ,CAACK,OAAO,GAAGR,MAAM,CAACQ,OAAO,CAACoD,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE3E,YAAY,EAAEC,aAAa,CAAC;IACjFoB,aAAa,CAACE,OAAO,GAAG,CAACmD,KAAK,CAAC;IAE/B,IAAIrE,IAAI,KAAK,KAAK,IAAIA,IAAI,KAAK,QAAQ,EAAE;MACvCU,MAAM,CAACQ,OAAO,CAACqD,SAAS,CAAC,CAAC;MAC1B7D,MAAM,CAACQ,OAAO,CAACsD,MAAM,CAACH,KAAK,CAACP,CAAC,EAAEO,KAAK,CAACJ,CAAC,CAAC;MACvCvD,MAAM,CAACQ,OAAO,CAACuD,WAAW,GAAGzE,IAAI,KAAK,QAAQ,GAAG,SAAS,GAAGC,KAAK;MAClES,MAAM,CAACQ,OAAO,CAACwD,SAAS,GAAGxE,SAAS;MACpCQ,MAAM,CAACQ,OAAO,CAAC6B,WAAW,GAAG5C,OAAO;MACpCE,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAGgE,KAAK,CAAC;IACtB;EACF,CAAC;EAED,MAAMM,iBAAiB,GAAIlB,CAAC,IAAK;IAC/B,IAAI,CAAC9C,OAAO,CAACO,OAAO,EAAE;IACtB,MAAMmD,KAAK,GAAGb,UAAU,CAACC,CAAC,CAAC;IAE3B,IAAIzD,IAAI,KAAK,KAAK,IAAIA,IAAI,KAAK,QAAQ,EAAE;MACvCU,MAAM,CAACQ,OAAO,CAAC0D,MAAM,CAACP,KAAK,CAACP,CAAC,EAAEO,KAAK,CAACJ,CAAC,CAAC;MACvCvD,MAAM,CAACQ,OAAO,CAACuD,WAAW,GAAGzE,IAAI,KAAK,QAAQ,GAAG,SAAS,GAAGC,KAAK;MAClES,MAAM,CAACQ,OAAO,CAACwD,SAAS,GAAGxE,SAAS;MACpCQ,MAAM,CAACQ,OAAO,CAAC6B,WAAW,GAAG5C,OAAO;MACpCO,MAAM,CAACQ,OAAO,CAAC2D,MAAM,CAAC,CAAC;MACvB7D,aAAa,CAACE,OAAO,CAAC4D,IAAI,CAACT,KAAK,CAAC;IACnC,CAAC,MAAM,IAAIrE,IAAI,KAAK,WAAW,IAAIA,IAAI,KAAK,QAAQ,EAAE;MACpDU,MAAM,CAACQ,OAAO,CAAC6D,YAAY,CAAClE,QAAQ,CAACK,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;MACnDR,MAAM,CAACQ,OAAO,CAACuD,WAAW,GAAGxE,KAAK;MAClCS,MAAM,CAACQ,OAAO,CAACwD,SAAS,GAAGxE,SAAS;MACpCQ,MAAM,CAACQ,OAAO,CAAC6B,WAAW,GAAG5C,OAAO;MACpC,IAAIH,IAAI,KAAK,WAAW,EAAE;QACxBU,MAAM,CAACQ,OAAO,CAAC8D,UAAU,CAACpE,UAAU,CAACM,OAAO,CAAC4C,CAAC,EAAElD,UAAU,CAACM,OAAO,CAAC+C,CAAC,EAAEI,KAAK,CAACP,CAAC,GAAGlD,UAAU,CAACM,OAAO,CAAC4C,CAAC,EAAEO,KAAK,CAACJ,CAAC,GAAGrD,UAAU,CAACM,OAAO,CAAC+C,CAAC,CAAC;MACvI,CAAC,MAAM;QACL,MAAMgB,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACd,KAAK,CAACP,CAAC,GAAGlD,UAAU,CAACM,OAAO,CAAC4C,CAAC,EAAEO,KAAK,CAACJ,CAAC,GAAGrD,UAAU,CAACM,OAAO,CAAC+C,CAAC,CAAC;QACzFvD,MAAM,CAACQ,OAAO,CAACqD,SAAS,CAAC,CAAC;QAC1B7D,MAAM,CAACQ,OAAO,CAACkE,GAAG,CAACxE,UAAU,CAACM,OAAO,CAAC4C,CAAC,EAAElD,UAAU,CAACM,OAAO,CAAC+C,CAAC,EAAEgB,MAAM,EAAE,CAAC,EAAE,CAAC,GAAGC,IAAI,CAACG,EAAE,CAAC;QACtF3E,MAAM,CAACQ,OAAO,CAAC2D,MAAM,CAAC,CAAC;MACzB;IACF;EACF,CAAC;EAED,MAAMS,eAAe,GAAI7B,CAAC,IAAK;IAC7B,IAAI,CAAC9C,OAAO,CAACO,OAAO,EAAE;IACtBP,OAAO,CAACO,OAAO,GAAG,KAAK;IACvB,MAAMmD,KAAK,GAAGb,UAAU,CAACC,CAAC,CAAC;IAC3B,IAAIzD,IAAI,KAAK,WAAW,IAAIA,IAAI,KAAK,QAAQ,EAAE;MAC7C2E,iBAAiB,CAAClB,CAAC,CAAC;MACpBrD,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAG;QACZ6C,IAAI,EAAE,OAAO;QACbsC,KAAK,EAAEvF,IAAI;QACXwF,KAAK,EAAE5E,UAAU,CAACM,OAAO;QACzBuE,GAAG,EAAEpB,KAAK;QACVpE,KAAK;QACLC,SAAS;QACTC,OAAO;QACPuF,UAAU,EAAEjF,SAAS,CAACS,OAAO,CAACC,SAAS,CAAC;MAC1C,CAAC,CAAC;IACJ,CAAC,MAAM,IAAI,CAACnB,IAAI,KAAK,KAAK,IAAIA,IAAI,KAAK,QAAQ,KAAKgB,aAAa,CAACE,OAAO,CAACyE,MAAM,GAAG,CAAC,EAAE;MACpFvF,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAG;QACZ6C,IAAI,EAAE,QAAQ;QACdE,MAAM,EAAEnC,aAAa,CAACE,OAAO;QAC7BlB,IAAI;QACJC,KAAK;QACLC,SAAS;QACTC,OAAO;QACPuF,UAAU,EAAEjF,SAAS,CAACS,OAAO,CAACC,SAAS,CAAC;MAC1C,CAAC,CAAC;IACJ,CAAC,MAAM;MACLf,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAG;QACZ6C,IAAI,EAAE,KAAK;QACXjD,IAAI;QACJC,KAAK;QACLC,SAAS;QACTC,OAAO;QACPuF,UAAU,EAAEjF,SAAS,CAACS,OAAO,CAACC,SAAS,CAAC;MAC1C,CAAC,CAAC;IACJ;IACAH,aAAa,CAACE,OAAO,GAAG,EAAE;IAC1BoB,eAAe,CAAC,CAAC;IACjBhC,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAG+D,KAAK,CAAC;EACpB,CAAC;EAED,MAAMuB,iBAAiB,GAAInC,CAAC,IAAK;IAC/B,IAAIzD,IAAI,KAAK,MAAM,EAAE;MACnB,MAAMqE,KAAK,GAAGb,UAAU,CAACC,CAAC,CAAC;MAC3B,MAAMoC,IAAI,GAAGC,MAAM,CAAC,aAAa,CAAC;MAClC,IAAID,IAAI,EAAE;QACRnF,MAAM,CAACQ,OAAO,CAAC6E,IAAI,GAAG,GAAG7F,SAAS,GAAG,CAAC,UAAU;QAChDQ,MAAM,CAACQ,OAAO,CAAC8E,SAAS,GAAG/F,KAAK;QAChCS,MAAM,CAACQ,OAAO,CAAC6B,WAAW,GAAG5C,OAAO;QACpCO,MAAM,CAACQ,OAAO,CAAC+E,QAAQ,CAACJ,IAAI,EAAExB,KAAK,CAACP,CAAC,EAAEO,KAAK,CAACJ,CAAC,CAAC;QAC/C3B,eAAe,CAAC,CAAC;QACjBlC,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAG;UACZ6C,IAAI,EAAE,MAAM;UACZ4C,IAAI;UACJxB,KAAK;UACLpE,KAAK;UACLC,SAAS;UACTC,OAAO;UACPuF,UAAU,EAAEjF,SAAS,CAACS,OAAO,CAACC,SAAS,CAAC;QAC1C,CAAC,CAAC;MACJ;IACF;EACF,CAAC;EAED,MAAMmB,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAI;MACF,MAAM4D,IAAI,GAAGxF,MAAM,CAACQ,OAAO,CAACoD,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE3E,YAAY,EAAEC,aAAa,CAAC;MAC3EkB,cAAc,CAACI,OAAO,CAAC4D,IAAI,CAACoB,IAAI,CAAC;MACjCnF,cAAc,CAACG,OAAO,GAAG,EAAE;IAC7B,CAAC,CAAC,OAAOiF,GAAG,EAAE;MACZC,OAAO,CAACC,IAAI,CAAC,uBAAuB,EAAEF,GAAG,CAAC;IAC5C;EACF,CAAC;EAED,MAAMvE,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAId,cAAc,CAACI,OAAO,CAACyE,MAAM,GAAG,CAAC,EAAE;MACrC,MAAMzE,OAAO,GAAGJ,cAAc,CAACI,OAAO,CAACoF,GAAG,CAAC,CAAC;MAC5CvF,cAAc,CAACG,OAAO,CAAC4D,IAAI,CAAC5D,OAAO,CAAC;MACpC,MAAMqF,QAAQ,GAAGzF,cAAc,CAACI,OAAO,CAACJ,cAAc,CAACI,OAAO,CAACyE,MAAM,GAAG,CAAC,CAAC;MAC1EjF,MAAM,CAACQ,OAAO,CAAC6D,YAAY,CAACwB,QAAQ,EAAE,CAAC,EAAE,CAAC,CAAC;IAC7C;EACF,CAAC;EAED,MAAMzE,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIf,cAAc,CAACG,OAAO,CAACyE,MAAM,GAAG,CAAC,EAAE;MACrC,MAAMa,OAAO,GAAGzF,cAAc,CAACG,OAAO,CAACoF,GAAG,CAAC,CAAC;MAC5C5F,MAAM,CAACQ,OAAO,CAAC6D,YAAY,CAACyB,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC;MAC1C1F,cAAc,CAACI,OAAO,CAAC4D,IAAI,CAAC0B,OAAO,CAAC;IACtC;EACF,CAAC;EAED,MAAMpD,QAAQ,GAAGA,CAACqD,IAAI,EAAEC,EAAE,EAAEC,QAAQ,KAAK;IACvCjG,MAAM,CAACQ,OAAO,CAAC0F,IAAI,CAAC,CAAC;IACrBlG,MAAM,CAACQ,OAAO,CAACqD,SAAS,CAAC,CAAC;IAC1B7D,MAAM,CAACQ,OAAO,CAACsD,MAAM,CAACiC,IAAI,CAAC3C,CAAC,EAAE2C,IAAI,CAACxC,CAAC,CAAC;IACrCvD,MAAM,CAACQ,OAAO,CAAC0D,MAAM,CAAC8B,EAAE,CAAC5C,CAAC,EAAE4C,EAAE,CAACzC,CAAC,CAAC;IACjCvD,MAAM,CAACQ,OAAO,CAACuD,WAAW,GAAGkC,QAAQ,CAAC3G,IAAI,KAAK,QAAQ,GAAG,SAAS,GAAG2G,QAAQ,CAAC1G,KAAK;IACpFS,MAAM,CAACQ,OAAO,CAACwD,SAAS,GAAGiC,QAAQ,CAACzG,SAAS;IAC7CQ,MAAM,CAACQ,OAAO,CAAC6B,WAAW,GAAG4D,QAAQ,CAACxG,OAAO;IAC7CO,MAAM,CAACQ,OAAO,CAAC2D,MAAM,CAAC,CAAC;IACvBnE,MAAM,CAACQ,OAAO,CAAC2F,OAAO,CAAC,CAAC;EAC1B,CAAC;EAED,MAAM3D,UAAU,GAAGA,CAACC,MAAM,EAAEwD,QAAQ,KAAK;IACvC,IAAI,CAACxD,MAAM,IAAIA,MAAM,CAACwC,MAAM,GAAG,CAAC,EAAE;IAClCjF,MAAM,CAACQ,OAAO,CAAC0F,IAAI,CAAC,CAAC;IACrBlG,MAAM,CAACQ,OAAO,CAACqD,SAAS,CAAC,CAAC;IAC1B7D,MAAM,CAACQ,OAAO,CAACsD,MAAM,CAACrB,MAAM,CAAC,CAAC,CAAC,CAACW,CAAC,EAAEX,MAAM,CAAC,CAAC,CAAC,CAACc,CAAC,CAAC;IAC/C,KAAK,IAAI6C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG3D,MAAM,CAACwC,MAAM,EAAEmB,CAAC,EAAE,EAAE;MACtCpG,MAAM,CAACQ,OAAO,CAAC0D,MAAM,CAACzB,MAAM,CAAC2D,CAAC,CAAC,CAAChD,CAAC,EAAEX,MAAM,CAAC2D,CAAC,CAAC,CAAC7C,CAAC,CAAC;IACjD;IACAvD,MAAM,CAACQ,OAAO,CAACuD,WAAW,GAAGkC,QAAQ,CAAC3G,IAAI,KAAK,QAAQ,GAAG,SAAS,GAAG2G,QAAQ,CAAC1G,KAAK;IACpFS,MAAM,CAACQ,OAAO,CAACwD,SAAS,GAAGiC,QAAQ,CAACzG,SAAS;IAC7CQ,MAAM,CAACQ,OAAO,CAAC6B,WAAW,GAAG4D,QAAQ,CAACxG,OAAO;IAC7CO,MAAM,CAACQ,OAAO,CAAC2D,MAAM,CAAC,CAAC;IACvBnE,MAAM,CAACQ,OAAO,CAAC2F,OAAO,CAAC,CAAC;EAC1B,CAAC;EAED,MAAMvD,SAAS,GAAGA,CAAC;IAAEiC,KAAK;IAAEC,KAAK;IAAEC,GAAG;IAAExF,KAAK;IAAEC,SAAS;IAAEC;EAAQ,CAAC,KAAK;IACtEO,MAAM,CAACQ,OAAO,CAAC0F,IAAI,CAAC,CAAC;IACrBlG,MAAM,CAACQ,OAAO,CAACuD,WAAW,GAAGxE,KAAK;IAClCS,MAAM,CAACQ,OAAO,CAACwD,SAAS,GAAGxE,SAAS;IACpCQ,MAAM,CAACQ,OAAO,CAAC6B,WAAW,GAAG5C,OAAO;IACpC,IAAIoF,KAAK,KAAK,WAAW,EAAE;MACzB7E,MAAM,CAACQ,OAAO,CAAC8D,UAAU,CAACQ,KAAK,CAAC1B,CAAC,EAAE0B,KAAK,CAACvB,CAAC,EAAEwB,GAAG,CAAC3B,CAAC,GAAG0B,KAAK,CAAC1B,CAAC,EAAE2B,GAAG,CAACxB,CAAC,GAAGuB,KAAK,CAACvB,CAAC,CAAC;IAC/E,CAAC,MAAM,IAAIsB,KAAK,KAAK,QAAQ,EAAE;MAC7B,MAAMN,MAAM,GAAGC,IAAI,CAACC,KAAK,CAACM,GAAG,CAAC3B,CAAC,GAAG0B,KAAK,CAAC1B,CAAC,EAAE2B,GAAG,CAACxB,CAAC,GAAGuB,KAAK,CAACvB,CAAC,CAAC;MAC3DvD,MAAM,CAACQ,OAAO,CAACqD,SAAS,CAAC,CAAC;MAC1B7D,MAAM,CAACQ,OAAO,CAACkE,GAAG,CAACI,KAAK,CAAC1B,CAAC,EAAE0B,KAAK,CAACvB,CAAC,EAAEgB,MAAM,EAAE,CAAC,EAAE,CAAC,GAAGC,IAAI,CAACG,EAAE,CAAC;MAC5D3E,MAAM,CAACQ,OAAO,CAAC2D,MAAM,CAAC,CAAC;IACzB;IACAnE,MAAM,CAACQ,OAAO,CAAC2F,OAAO,CAAC,CAAC;EAC1B,CAAC;EAED,MAAMtD,QAAQ,GAAGA,CAAC;IAAEsC,IAAI;IAAExB,KAAK;IAAEpE,KAAK;IAAEC,SAAS;IAAEC;EAAQ,CAAC,KAAK;IAC/DO,MAAM,CAACQ,OAAO,CAAC0F,IAAI,CAAC,CAAC;IACrBlG,MAAM,CAACQ,OAAO,CAAC6E,IAAI,GAAG,GAAG7F,SAAS,GAAG,CAAC,UAAU;IAChDQ,MAAM,CAACQ,OAAO,CAAC8E,SAAS,GAAG/F,KAAK;IAChCS,MAAM,CAACQ,OAAO,CAAC6B,WAAW,GAAG5C,OAAO;IACpCO,MAAM,CAACQ,OAAO,CAAC+E,QAAQ,CAACJ,IAAI,EAAExB,KAAK,CAACP,CAAC,EAAEO,KAAK,CAACJ,CAAC,CAAC;IAC/CvD,MAAM,CAACQ,OAAO,CAAC2F,OAAO,CAAC,CAAC;EAC1B,CAAC;EAED,MAAMnF,WAAW,GAAGA,CAAA,KAAM;IACxBhB,MAAM,CAACQ,OAAO,CAACkB,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEzC,YAAY,EAAEC,aAAa,CAAC;IAC3D0C,eAAe,CAAC,CAAC;EACnB,CAAC;EAED,oBACE5C,OAAA;IAAKqH,KAAK,EAAE;MAAEC,QAAQ,EAAE,UAAU;MAAEC,OAAO,EAAE;IAAe,CAAE;IAAAC,QAAA,eAC5DxH,OAAA;MACEc,GAAG,EAAEC,SAAU;MACfgC,KAAK,EAAE9C,YAAa;MACpB+C,MAAM,EAAE9C,aAAc;MACtBmH,KAAK,EAAE;QACLI,UAAU,EAAE,MAAM;QAClBC,YAAY,EAAE,EAAE;QAChBC,SAAS,EAAE,6BAA6B;QACxCC,MAAM,EAAE,EAAE;QACVC,MAAM,EAAEvH,IAAI,KAAK,MAAM,GAAG,MAAM,GAAGA,IAAI,KAAK,QAAQ,GAAG,MAAM,GAAG,WAAW;QAC3EwH,WAAW,EAAE,MAAM;QACnBC,UAAU,EAAE,MAAM;QAClBC,QAAQ,EAAE,MAAM;QAChBC,SAAS,EAAE,MAAM;QACjBC,SAAS,EAAE;MACb,CAAE;MACFC,aAAa,EAAEzD,iBAAkB;MACjC0D,aAAa,EAAEnD,iBAAkB;MACjCoD,WAAW,EAAEzC,eAAgB;MAC7B0C,aAAa,EAAEpC;IAAkB;MAAAqC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC,kCAAC;AAACC,GAAA,GAtSGxI,MAAM;AAwSZ,eAAeA,MAAM;AAAC,IAAAE,EAAA,EAAAsI,GAAA;AAAAC,YAAA,CAAAvI,EAAA;AAAAuI,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}