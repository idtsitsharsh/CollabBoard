{"ast":null,"code":"var _jsxFileName = \"F:\\\\Open Project'25\\\\MARS Open Project\\\\Collaborative-whiteboard-with-real-time-drawing\\\\frontend\\\\src\\\\components\\\\Canvas.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useImperativeHandle, forwardRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CANVAS_WIDTH = 1200;\nconst CANVAS_HEIGHT = 700;\nconst Canvas = /*#__PURE__*/_s(/*#__PURE__*/forwardRef(_c = _s(({\n  tool = 'pen',\n  color = '#000000',\n  brushSize = 2,\n  opacity = 1,\n  onDrawEvent,\n  onDrawStart,\n  onDrawEnd,\n  remoteDrawEvent\n}, ref) => {\n  _s();\n  const canvasRef = useRef(null);\n  const ctxRef = useRef(null);\n  const drawing = useRef(false);\n  const startPoint = useRef(null);\n  const snapshot = useRef(null);\n  const localUndoStack = useRef([]);\n  const localRedoStack = useRef([]);\n  const currentStroke = useRef([]);\n  useImperativeHandle(ref, () => ({\n    exportImage: () => canvasRef.current.toDataURL('image/png'),\n    exportPDF: async () => {\n      const jsPDF = (await import('jspdf')).jsPDF;\n      const dataUrl = canvasRef.current.toDataURL('image/png');\n      const pdf = new jsPDF({\n        orientation: 'landscape'\n      });\n      pdf.addImage(dataUrl, 'PNG', 10, 10, 280, 160);\n      return pdf;\n    },\n    clear: () => clearCanvas(),\n    undo: () => handleUndo(),\n    redo: () => handleRedo(),\n    loadImageFromDataUrl: dataUrl => {\n      const img = new window.Image();\n      img.onload = () => {\n        ctxRef.current.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n        ctxRef.current.drawImage(img, 0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n        localUndoStack.current = [ctxRef.current.getImageData(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT)];\n        localRedoStack.current = [];\n      };\n      img.src = dataUrl;\n    }\n  }));\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas.width = CANVAS_WIDTH;\n    canvas.height = CANVAS_HEIGHT;\n    const ctx = canvas.getContext('2d');\n    ctx.lineCap = 'round';\n    ctx.lineJoin = 'round';\n    ctx.globalAlpha = opacity;\n    ctxRef.current = ctx;\n\n    // Save initial blank canvas for undo stack\n    const blank = ctx.getImageData(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n    localUndoStack.current = [blank];\n    localRedoStack.current = [];\n  }, [opacity]);\n  useEffect(() => {\n    if (!remoteDrawEvent) return;\n    if (remoteDrawEvent.type === 'stroke') {\n      drawStroke(remoteDrawEvent.points, remoteDrawEvent);\n    } else if (remoteDrawEvent.type === 'draw') {\n      drawLine(remoteDrawEvent.prev, remoteDrawEvent.current, remoteDrawEvent);\n    } else if (remoteDrawEvent.type === 'shape') {\n      drawShape(remoteDrawEvent);\n    } else if (remoteDrawEvent.type === 'text') {\n      drawText(remoteDrawEvent);\n    } else if (remoteDrawEvent.type === 'clear') {\n      clearCanvas();\n    }\n  }, [remoteDrawEvent]);\n  const getPointer = e => {\n    const rect = canvasRef.current.getBoundingClientRect();\n    const scaleX = CANVAS_WIDTH / rect.width;\n    const scaleY = CANVAS_HEIGHT / rect.height;\n    return {\n      x: (e.clientX - rect.left) * scaleX,\n      y: (e.clientY - rect.top) * scaleY\n    };\n  };\n  const handlePointerDown = e => {\n    drawing.current = true;\n    const point = getPointer(e);\n    startPoint.current = point;\n    snapshot.current = ctxRef.current.getImageData(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n    currentStroke.current = [point];\n    if (tool === 'pen' || tool === 'eraser') {\n      ctxRef.current.beginPath();\n      ctxRef.current.moveTo(point.x, point.y);\n      ctxRef.current.strokeStyle = tool === 'eraser' ? '#fff' : color;\n      ctxRef.current.lineWidth = brushSize;\n      ctxRef.current.globalAlpha = opacity;\n      onDrawStart === null || onDrawStart === void 0 ? void 0 : onDrawStart(point);\n    }\n  };\n  const handlePointerMove = e => {\n    if (!drawing.current) return;\n    const point = getPointer(e);\n    if (tool === 'pen' || tool === 'eraser') {\n      ctxRef.current.lineTo(point.x, point.y);\n      ctxRef.current.strokeStyle = tool === 'eraser' ? '#fff' : color;\n      ctxRef.current.lineWidth = brushSize;\n      ctxRef.current.globalAlpha = opacity;\n      ctxRef.current.stroke();\n      currentStroke.current.push(point);\n    } else if (tool === 'rectangle' || tool === 'circle') {\n      ctxRef.current.putImageData(snapshot.current, 0, 0);\n      ctxRef.current.strokeStyle = color;\n      ctxRef.current.lineWidth = brushSize;\n      ctxRef.current.globalAlpha = opacity;\n      const width = point.x - startPoint.current.x;\n      const height = point.y - startPoint.current.y;\n      if (tool === 'rectangle') {\n        ctxRef.current.strokeRect(startPoint.current.x, startPoint.current.y, width, height);\n      } else {\n        const radius = Math.sqrt(width * width + height * height);\n        ctxRef.current.beginPath();\n        ctxRef.current.arc(startPoint.current.x, startPoint.current.y, radius, 0, 2 * Math.PI);\n        ctxRef.current.stroke();\n      }\n    }\n  };\n  const handlePointerUp = e => {\n    if (!drawing.current) return;\n    drawing.current = false;\n    const point = getPointer(e);\n    if (tool === 'rectangle' || tool === 'circle') {\n      handlePointerMove(e);\n      onDrawEvent === null || onDrawEvent === void 0 ? void 0 : onDrawEvent({\n        type: 'shape',\n        shape: tool,\n        start: startPoint.current,\n        end: point,\n        color,\n        brushSize,\n        opacity\n      });\n    }\n    if ((tool === 'pen' || tool === 'eraser') && currentStroke.current.length > 1) {\n      onDrawEvent === null || onDrawEvent === void 0 ? void 0 : onDrawEvent({\n        type: 'stroke',\n        points: currentStroke.current,\n        tool,\n        color,\n        brushSize,\n        opacity\n      });\n    } else if (tool !== 'rectangle' && tool !== 'circle') {\n      onDrawEvent === null || onDrawEvent === void 0 ? void 0 : onDrawEvent({\n        type: 'end',\n        canvasData: canvasRef.current.toDataURL('image/png'),\n        tool,\n        color,\n        brushSize,\n        opacity\n      });\n    }\n\n    // Save current state to undo stack\n    localUndoStack.current.push(ctxRef.current.getImageData(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT));\n    localRedoStack.current = [];\n    currentStroke.current = [];\n    onDrawEnd === null || onDrawEnd === void 0 ? void 0 : onDrawEnd(point);\n  };\n  const handleDoubleClick = e => {\n    if (tool === 'text') {\n      const point = getPointer(e);\n      const text = prompt('Enter text:');\n      if (text) {\n        ctxRef.current.font = `${brushSize * 6}px Arial`;\n        ctxRef.current.fillStyle = color;\n        ctxRef.current.globalAlpha = opacity;\n        ctxRef.current.fillText(text, point.x, point.y);\n        localUndoStack.current.push(ctxRef.current.getImageData(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT));\n        localRedoStack.current = [];\n        onDrawEvent === null || onDrawEvent === void 0 ? void 0 : onDrawEvent({\n          type: 'text',\n          text,\n          point,\n          color,\n          brushSize,\n          opacity\n        });\n      }\n    }\n  };\n  const handleUndo = () => {\n    if (localUndoStack.current.length > 1) {\n      const last = localUndoStack.current.pop();\n      localRedoStack.current.push(last);\n      const prev = localUndoStack.current[localUndoStack.current.length - 1];\n      ctxRef.current.putImageData(prev, 0, 0);\n    }\n  };\n  const handleRedo = () => {\n    if (localRedoStack.current.length > 0) {\n      const next = localRedoStack.current.pop();\n      ctxRef.current.putImageData(next, 0, 0);\n      localUndoStack.current.push(next);\n    }\n  };\n  const clearCanvas = () => {\n    ctxRef.current.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n    localUndoStack.current.push(ctxRef.current.getImageData(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT));\n    localRedoStack.current = [];\n  };\n  const drawLine = (from, to, settings) => {\n    ctxRef.current.save();\n    ctxRef.current.beginPath();\n    ctxRef.current.moveTo(from.x, from.y);\n    ctxRef.current.lineTo(to.x, to.y);\n    ctxRef.current.strokeStyle = settings.tool === 'eraser' ? '#fff' : settings.color;\n    ctxRef.current.lineWidth = settings.brushSize;\n    ctxRef.current.globalAlpha = settings.opacity;\n    ctxRef.current.stroke();\n    ctxRef.current.restore();\n  };\n  const drawStroke = (points, settings) => {\n    if (points.length < 2) return;\n    ctxRef.current.save();\n    ctxRef.current.beginPath();\n    ctxRef.current.moveTo(points[0].x, points[0].y);\n    for (let i = 1; i < points.length; i++) {\n      ctxRef.current.lineTo(points[i].x, points[i].y);\n    }\n    ctxRef.current.strokeStyle = settings.tool === 'eraser' ? '#fff' : settings.color;\n    ctxRef.current.lineWidth = settings.brushSize;\n    ctxRef.current.globalAlpha = settings.opacity;\n    ctxRef.current.stroke();\n    ctxRef.current.restore();\n  };\n  const drawShape = event => {\n    const {\n      shape,\n      start,\n      end,\n      color,\n      brushSize,\n      opacity\n    } = event;\n    ctxRef.current.save();\n    ctxRef.current.strokeStyle = color;\n    ctxRef.current.lineWidth = brushSize;\n    ctxRef.current.globalAlpha = opacity;\n    if (shape === 'rectangle') {\n      ctxRef.current.strokeRect(start.x, start.y, end.x - start.x, end.y - start.y);\n    } else if (shape === 'circle') {\n      const radius = Math.sqrt((end.x - start.x) ** 2 + (end.y - start.y) ** 2);\n      ctxRef.current.beginPath();\n      ctxRef.current.arc(start.x, start.y, radius, 0, 2 * Math.PI);\n      ctxRef.current.stroke();\n    }\n    ctxRef.current.restore();\n  };\n  const drawText = event => {\n    const {\n      text,\n      point,\n      color,\n      brushSize,\n      opacity\n    } = event;\n    ctxRef.current.save();\n    ctxRef.current.font = `${brushSize * 6}px Arial`;\n    ctxRef.current.fillStyle = color;\n    ctxRef.current.globalAlpha = opacity;\n    ctxRef.current.fillText(text, point.x, point.y);\n    ctxRef.current.restore();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative',\n      display: 'inline-block'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      onPointerDown: handlePointerDown,\n      onPointerMove: handlePointerMove,\n      onPointerUp: handlePointerUp,\n      onDoubleClick: handleDoubleClick,\n      style: {\n        background: '#fff',\n        borderRadius: 16,\n        boxShadow: '0 4px 16px rgba(0,0,0,0.07)',\n        margin: 24,\n        cursor: tool === 'text' ? 'text' : tool === 'eraser' ? 'cell' : 'crosshair',\n        width: '100%',\n        height: 'auto',\n        maxWidth: '100%',\n        maxHeight: '80vh',\n        objectFit: 'contain',\n        userSelect: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 283,\n    columnNumber: 5\n  }, this);\n}, \"YQXglGjB3Pu75g23uNRlD0Dl+DY=\")), \"YQXglGjB3Pu75g23uNRlD0Dl+DY=\");\n_c2 = Canvas;\nexport default Canvas;\nvar _c, _c2;\n$RefreshReg$(_c, \"Canvas$forwardRef\");\n$RefreshReg$(_c2, \"Canvas\");","map":{"version":3,"names":["React","useRef","useEffect","useImperativeHandle","forwardRef","jsxDEV","_jsxDEV","CANVAS_WIDTH","CANVAS_HEIGHT","Canvas","_s","_c","tool","color","brushSize","opacity","onDrawEvent","onDrawStart","onDrawEnd","remoteDrawEvent","ref","canvasRef","ctxRef","drawing","startPoint","snapshot","localUndoStack","localRedoStack","currentStroke","exportImage","current","toDataURL","exportPDF","jsPDF","dataUrl","pdf","orientation","addImage","clear","clearCanvas","undo","handleUndo","redo","handleRedo","loadImageFromDataUrl","img","window","Image","onload","clearRect","drawImage","getImageData","src","canvas","width","height","ctx","getContext","lineCap","lineJoin","globalAlpha","blank","type","drawStroke","points","drawLine","prev","drawShape","drawText","getPointer","e","rect","getBoundingClientRect","scaleX","scaleY","x","clientX","left","y","clientY","top","handlePointerDown","point","beginPath","moveTo","strokeStyle","lineWidth","handlePointerMove","lineTo","stroke","push","putImageData","strokeRect","radius","Math","sqrt","arc","PI","handlePointerUp","shape","start","end","length","canvasData","handleDoubleClick","text","prompt","font","fillStyle","fillText","last","pop","next","from","to","settings","save","restore","i","event","style","position","display","children","onPointerDown","onPointerMove","onPointerUp","onDoubleClick","background","borderRadius","boxShadow","margin","cursor","maxWidth","maxHeight","objectFit","userSelect","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["F:/Open Project'25/MARS Open Project/Collaborative-whiteboard-with-real-time-drawing/frontend/src/components/Canvas.js"],"sourcesContent":["import React, { useRef, useEffect, useImperativeHandle, forwardRef } from 'react';\r\n\r\nconst CANVAS_WIDTH = 1200;\r\nconst CANVAS_HEIGHT = 700;\r\n\r\nconst Canvas = forwardRef(({\r\n  tool = 'pen',\r\n  color = '#000000',\r\n  brushSize = 2,\r\n  opacity = 1,\r\n  onDrawEvent,\r\n  onDrawStart,\r\n  onDrawEnd,\r\n  remoteDrawEvent\r\n}, ref) => {\r\n  const canvasRef = useRef(null);\r\n  const ctxRef = useRef(null);\r\n  const drawing = useRef(false);\r\n  const startPoint = useRef(null);\r\n  const snapshot = useRef(null);\r\n  const localUndoStack = useRef([]);\r\n  const localRedoStack = useRef([]);\r\n  const currentStroke = useRef([]);\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    exportImage: () => canvasRef.current.toDataURL('image/png'),\r\n    exportPDF: async () => {\r\n      const jsPDF = (await import('jspdf')).jsPDF;\r\n      const dataUrl = canvasRef.current.toDataURL('image/png');\r\n      const pdf = new jsPDF({ orientation: 'landscape' });\r\n      pdf.addImage(dataUrl, 'PNG', 10, 10, 280, 160);\r\n      return pdf;\r\n    },\r\n    clear: () => clearCanvas(),\r\n    undo: () => handleUndo(),\r\n    redo: () => handleRedo(),\r\n    loadImageFromDataUrl: (dataUrl) => {\r\n      const img = new window.Image();\r\n      img.onload = () => {\r\n        ctxRef.current.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\r\n        ctxRef.current.drawImage(img, 0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\r\n        localUndoStack.current = [ctxRef.current.getImageData(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT)];\r\n        localRedoStack.current = [];\r\n      };\r\n      img.src = dataUrl;\r\n    }\r\n  }));\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    canvas.width = CANVAS_WIDTH;\r\n    canvas.height = CANVAS_HEIGHT;\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.lineCap = 'round';\r\n    ctx.lineJoin = 'round';\r\n    ctx.globalAlpha = opacity;\r\n    ctxRef.current = ctx;\r\n\r\n    // Save initial blank canvas for undo stack\r\n    const blank = ctx.getImageData(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\r\n    localUndoStack.current = [blank];\r\n    localRedoStack.current = [];\r\n  }, [opacity]);\r\n\r\n  useEffect(() => {\r\n    if (!remoteDrawEvent) return;\r\n    if (remoteDrawEvent.type === 'stroke') {\r\n      drawStroke(remoteDrawEvent.points, remoteDrawEvent);\r\n    } else if (remoteDrawEvent.type === 'draw') {\r\n      drawLine(remoteDrawEvent.prev, remoteDrawEvent.current, remoteDrawEvent);\r\n    } else if (remoteDrawEvent.type === 'shape') {\r\n      drawShape(remoteDrawEvent);\r\n    } else if (remoteDrawEvent.type === 'text') {\r\n      drawText(remoteDrawEvent);\r\n    } else if (remoteDrawEvent.type === 'clear') {\r\n      clearCanvas();\r\n    }\r\n  }, [remoteDrawEvent]);\r\n\r\n  const getPointer = (e) => {\r\n    const rect = canvasRef.current.getBoundingClientRect();\r\n    const scaleX = CANVAS_WIDTH / rect.width;\r\n    const scaleY = CANVAS_HEIGHT / rect.height;\r\n    return {\r\n      x: (e.clientX - rect.left) * scaleX,\r\n      y: (e.clientY - rect.top) * scaleY\r\n    };\r\n  };\r\n\r\n  const handlePointerDown = (e) => {\r\n    drawing.current = true;\r\n    const point = getPointer(e);\r\n    startPoint.current = point;\r\n    snapshot.current = ctxRef.current.getImageData(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\r\n    currentStroke.current = [point];\r\n\r\n    if (tool === 'pen' || tool === 'eraser') {\r\n      ctxRef.current.beginPath();\r\n      ctxRef.current.moveTo(point.x, point.y);\r\n      ctxRef.current.strokeStyle = tool === 'eraser' ? '#fff' : color;\r\n      ctxRef.current.lineWidth = brushSize;\r\n      ctxRef.current.globalAlpha = opacity;\r\n      onDrawStart?.(point);\r\n    }\r\n  };\r\n\r\n  const handlePointerMove = (e) => {\r\n    if (!drawing.current) return;\r\n    const point = getPointer(e);\r\n\r\n    if (tool === 'pen' || tool === 'eraser') {\r\n      ctxRef.current.lineTo(point.x, point.y);\r\n      ctxRef.current.strokeStyle = tool === 'eraser' ? '#fff' : color;\r\n      ctxRef.current.lineWidth = brushSize;\r\n      ctxRef.current.globalAlpha = opacity;\r\n      ctxRef.current.stroke();\r\n      currentStroke.current.push(point);\r\n    } else if (tool === 'rectangle' || tool === 'circle') {\r\n      ctxRef.current.putImageData(snapshot.current, 0, 0);\r\n      ctxRef.current.strokeStyle = color;\r\n      ctxRef.current.lineWidth = brushSize;\r\n      ctxRef.current.globalAlpha = opacity;\r\n      const width = point.x - startPoint.current.x;\r\n      const height = point.y - startPoint.current.y;\r\n      if (tool === 'rectangle') {\r\n        ctxRef.current.strokeRect(startPoint.current.x, startPoint.current.y, width, height);\r\n      } else {\r\n        const radius = Math.sqrt(width * width + height * height);\r\n        ctxRef.current.beginPath();\r\n        ctxRef.current.arc(startPoint.current.x, startPoint.current.y, radius, 0, 2 * Math.PI);\r\n        ctxRef.current.stroke();\r\n      }\r\n    }\r\n  };\r\n\r\n  const handlePointerUp = (e) => {\r\n    if (!drawing.current) return;\r\n    drawing.current = false;\r\n\r\n    const point = getPointer(e);\r\n\r\n    if (tool === 'rectangle' || tool === 'circle') {\r\n      handlePointerMove(e);\r\n      onDrawEvent?.({\r\n        type: 'shape',\r\n        shape: tool,\r\n        start: startPoint.current,\r\n        end: point,\r\n        color,\r\n        brushSize,\r\n        opacity\r\n      });\r\n    }\r\n\r\n    if ((tool === 'pen' || tool === 'eraser') && currentStroke.current.length > 1) {\r\n      onDrawEvent?.({\r\n        type: 'stroke',\r\n        points: currentStroke.current,\r\n        tool,\r\n        color,\r\n        brushSize,\r\n        opacity\r\n      });\r\n    } else if (tool !== 'rectangle' && tool !== 'circle') {\r\n      onDrawEvent?.({\r\n        type: 'end',\r\n        canvasData: canvasRef.current.toDataURL('image/png'),\r\n        tool,\r\n        color,\r\n        brushSize,\r\n        opacity\r\n      });\r\n    }\r\n\r\n    // Save current state to undo stack\r\n    localUndoStack.current.push(ctxRef.current.getImageData(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT));\r\n    localRedoStack.current = [];\r\n    currentStroke.current = [];\r\n    onDrawEnd?.(point);\r\n  };\r\n\r\n  const handleDoubleClick = (e) => {\r\n    if (tool === 'text') {\r\n      const point = getPointer(e);\r\n      const text = prompt('Enter text:');\r\n      if (text) {\r\n        ctxRef.current.font = `${brushSize * 6}px Arial`;\r\n        ctxRef.current.fillStyle = color;\r\n        ctxRef.current.globalAlpha = opacity;\r\n        ctxRef.current.fillText(text, point.x, point.y);\r\n        localUndoStack.current.push(ctxRef.current.getImageData(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT));\r\n        localRedoStack.current = [];\r\n        onDrawEvent?.({\r\n          type: 'text',\r\n          text,\r\n          point,\r\n          color,\r\n          brushSize,\r\n          opacity\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleUndo = () => {\r\n    if (localUndoStack.current.length > 1) {\r\n      const last = localUndoStack.current.pop();\r\n      localRedoStack.current.push(last);\r\n      const prev = localUndoStack.current[localUndoStack.current.length - 1];\r\n      ctxRef.current.putImageData(prev, 0, 0);\r\n    }\r\n  };\r\n\r\n  const handleRedo = () => {\r\n    if (localRedoStack.current.length > 0) {\r\n      const next = localRedoStack.current.pop();\r\n      ctxRef.current.putImageData(next, 0, 0);\r\n      localUndoStack.current.push(next);\r\n    }\r\n  };\r\n\r\n  const clearCanvas = () => {\r\n    ctxRef.current.clearRect(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\r\n    localUndoStack.current.push(ctxRef.current.getImageData(0, 0, CANVAS_WIDTH, CANVAS_HEIGHT));\r\n    localRedoStack.current = [];\r\n  };\r\n\r\n  const drawLine = (from, to, settings) => {\r\n    ctxRef.current.save();\r\n    ctxRef.current.beginPath();\r\n    ctxRef.current.moveTo(from.x, from.y);\r\n    ctxRef.current.lineTo(to.x, to.y);\r\n    ctxRef.current.strokeStyle = settings.tool === 'eraser' ? '#fff' : settings.color;\r\n    ctxRef.current.lineWidth = settings.brushSize;\r\n    ctxRef.current.globalAlpha = settings.opacity;\r\n    ctxRef.current.stroke();\r\n    ctxRef.current.restore();\r\n  };\r\n\r\n  const drawStroke = (points, settings) => {\r\n    if (points.length < 2) return;\r\n    ctxRef.current.save();\r\n    ctxRef.current.beginPath();\r\n    ctxRef.current.moveTo(points[0].x, points[0].y);\r\n    for (let i = 1; i < points.length; i++) {\r\n      ctxRef.current.lineTo(points[i].x, points[i].y);\r\n    }\r\n    ctxRef.current.strokeStyle = settings.tool === 'eraser' ? '#fff' : settings.color;\r\n    ctxRef.current.lineWidth = settings.brushSize;\r\n    ctxRef.current.globalAlpha = settings.opacity;\r\n    ctxRef.current.stroke();\r\n    ctxRef.current.restore();\r\n  };\r\n\r\n  const drawShape = (event) => {\r\n    const { shape, start, end, color, brushSize, opacity } = event;\r\n    ctxRef.current.save();\r\n    ctxRef.current.strokeStyle = color;\r\n    ctxRef.current.lineWidth = brushSize;\r\n    ctxRef.current.globalAlpha = opacity;\r\n    if (shape === 'rectangle') {\r\n      ctxRef.current.strokeRect(start.x, start.y, end.x - start.x, end.y - start.y);\r\n    } else if (shape === 'circle') {\r\n      const radius = Math.sqrt((end.x - start.x) ** 2 + (end.y - start.y) ** 2);\r\n      ctxRef.current.beginPath();\r\n      ctxRef.current.arc(start.x, start.y, radius, 0, 2 * Math.PI);\r\n      ctxRef.current.stroke();\r\n    }\r\n    ctxRef.current.restore();\r\n  };\r\n\r\n  const drawText = (event) => {\r\n    const { text, point, color, brushSize, opacity } = event;\r\n    ctxRef.current.save();\r\n    ctxRef.current.font = `${brushSize * 6}px Arial`;\r\n    ctxRef.current.fillStyle = color;\r\n    ctxRef.current.globalAlpha = opacity;\r\n    ctxRef.current.fillText(text, point.x, point.y);\r\n    ctxRef.current.restore();\r\n  };\r\n\r\n  return (\r\n    <div style={{ position: 'relative', display: 'inline-block' }}>\r\n      <canvas\r\n        ref={canvasRef}\r\n        onPointerDown={handlePointerDown}\r\n        onPointerMove={handlePointerMove}\r\n        onPointerUp={handlePointerUp}\r\n        onDoubleClick={handleDoubleClick}\r\n        style={{\r\n          background: '#fff',\r\n          borderRadius: 16,\r\n          boxShadow: '0 4px 16px rgba(0,0,0,0.07)',\r\n          margin: 24,\r\n          cursor: tool === 'text' ? 'text' : tool === 'eraser' ? 'cell' : 'crosshair',\r\n          width: '100%',\r\n          height: 'auto',\r\n          maxWidth: '100%',\r\n          maxHeight: '80vh',\r\n          objectFit: 'contain',\r\n          userSelect: 'none',\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Canvas;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}